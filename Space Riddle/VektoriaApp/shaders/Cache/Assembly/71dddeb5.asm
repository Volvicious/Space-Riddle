//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
// Buffer Definitions: 
//
// cbuffer TexInfo
// {
//
//   float fBloomOriginalIntensity;     // Offset:    0 Size:     4 [unused]
//   float fBloomIntensity;             // Offset:    4 Size:     4 [unused]
//   float fBloomOriginalSaturation;    // Offset:    8 Size:     4 [unused]
//   float fBloomSaturation;            // Offset:   12 Size:     4 [unused]
//   float fRayExposure;                // Offset:   16 Size:     4 [unused]
//   float fRayDecay;                   // Offset:   20 Size:     4 [unused]
//   float fRayDensity;                 // Offset:   24 Size:     4 [unused]
//   float fRayWeight;                  // Offset:   28 Size:     4 [unused]
//   float fTimeDelta;                  // Offset:   32 Size:     4 [unused]
//   float fBloomBlurDistance;          // Offset:   36 Size:     4 [unused]
//   float fDoFFar;                     // Offset:   40 Size:     4 [unused]
//   float fDoFNear;                    // Offset:   44 Size:     4 [unused]
//   float fRcpFrameX;                  // Offset:   48 Size:     4
//   float fRcpFrameY;                  // Offset:   52 Size:     4
//   uint uPad5;                        // Offset:   56 Size:     4 [unused]
//   uint uPad6;                        // Offset:   60 Size:     4 [unused]
//   float4 f4GodRayPos;                // Offset:   64 Size:    16 [unused]
//   float4 f4rcpFrameOpt;              // Offset:   80 Size:    16 [unused]
//   float4 f4DoFParams;                // Offset:   96 Size:    16 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// linearSampler                     sampler      NA          NA    1        1
// tex2D[8]                          texture  float4          2d   23        1
// TexInfo                           cbuffer      NA          NA    7        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// TEXCOORD                 0   xy          1     NONE  float   xy  
// TEXCOORD                 2   xyzw        2     NONE  float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_TARGET                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb7[4], immediateIndexed
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t23
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 6

#line 105 "\\?\C:\Projects\Vektoria_2015-05-22_V13withPatch4\Vektoria\trunk\VektoriaApp\shaders\source\BloomPost.hlsl"
nop 
mov r0.xy, v1.xyxx  // input<4,5>

#line 95
nop 
mov r0.xy, r0.xyxx  // input<4,5>

#line 78
mov r1.xyz, l(0,0,0,0)  // f4Color<0: -0f,1: -0f,2: -0f>
div r2.x, l(1.000000), cb7[3].x  // f2FrameWidth<0:Inf>
div r2.y, l(1.000000), cb7[3].y  // f2FrameWidth<1:Inf>
mov r0.z, l(-6)  // i<0: -6>
mov r3.xyz, r1.xyzx  // f4Color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r0.w, r0.z  // i<0>
loop 
  ilt r1.w, r0.w, l(6)
  breakc_z r1.w
  nop 
  mov r1.w, r0.w  // iSampleDist<0>

#line 73
  imul null, r1.w, r1.w, r1.w
  itof r1.w, -r1.w
  div r1.w, r1.w, l(6.480000)
  mul r1.w, r1.w, l(1.442695)
  exp r1.w, r1.w
  mul r1.w, r1.w, l(0.221635)  // CalcGaussianWeight<0:Inf:[0f,1.#INFf]>

#line 82
  mov r1.w, r1.w  // fWeight<0:Inf:[0f,1.#INFf]>
  mov r2.zw, r0.xxxy  // f2TexCoord<0,1>
  itof r4.xy, r0.wwww
  div r4.xy, r4.xyxx, r2.xyxx
  mul r4.xy, r4.xyxx, l(1.000000, 0.000000, 0.000000, 0.000000)
  mov r4.xy, -r4.xyxx
  add r2.zw, r2.zzzw, r4.xxxy  // f2TexCoord<0:NaN:Inf,1:NaN>
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.zwzz, t23.xyzw, s1
  mov r4.xyz, r4.xyzx  // f4Sample<0:Inf,1:Inf,2:Inf>
  mul r4.xyz, r1.wwww, r4.xyzx
  add r3.xyz, r3.xyzx, r4.xyzx  // f4Color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 80
  iadd r0.w, r0.w, l(1)  // i<0>
endloop 

#line 90
mov r3.xyz, r3.xyzx  // Blur<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 95
mov r3.xyz, r3.xyzx  // BloomBlurH<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 105
mov r3.xyz, r3.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
nop 

#line 100
nop 

#line 79
div r2.x, l(1.000000), cb7[3].x  // f2FrameWidth<0:Inf>
div r2.y, l(1.000000), cb7[3].y  // f2FrameWidth<1:Inf>
mov r4.xyz, r1.xyzx  // f4Color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r0.w, r0.z  // i<0>
loop 
  ilt r1.w, r0.w, l(6)
  breakc_z r1.w
  nop 
  mov r1.w, r0.w  // iSampleDist<0>

#line 73
  imul null, r1.w, r1.w, r1.w
  itof r1.w, -r1.w
  div r1.w, r1.w, l(6.480000)
  mul r1.w, r1.w, l(1.442695)
  exp r1.w, r1.w
  mul r1.w, r1.w, l(0.221635)  // CalcGaussianWeight<0:Inf:[0f,1.#INFf]>

#line 82
  mov r1.w, r1.w  // fWeight<0:Inf:[0f,1.#INFf]>
  mov r2.zw, r0.xxxy  // f2TexCoord<0,1>
  itof r5.xy, r0.wwww
  div r5.xy, r5.xyxx, r2.xyxx
  mul r5.xy, r5.xyxx, l(0.000000, 1.000000, 0.000000, 0.000000)
  mov r5.xy, -r5.xyxx
  add r2.zw, r2.zzzw, r5.xxxy  // f2TexCoord<0:NaN,1:NaN:Inf>
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r2.zwzz, t23.xyzw, s1
  mov r5.xyz, r5.xyzx  // f4Sample<0:Inf,1:Inf,2:Inf>
  mul r5.xyz, r1.wwww, r5.xyzx
  add r4.xyz, r4.xyzx, r5.xyzx  // f4Color<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 80
  iadd r0.w, r0.w, l(1)  // i<0>
endloop 

#line 90
mov r4.xyz, r4.xyzx  // Blur<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 100
mov r4.xyz, r4.xyzx  // BloomBlurV<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 106
add r0.xyz, r3.xyzx, r4.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 110
mov o0.xyz, r0.xyzx  // PS_BLOOMBLUR<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov o0.w, l(1.000000)  // PS_BLOOMBLUR<3: 1f>
ret 
// Approximately 74 instruction slots used
