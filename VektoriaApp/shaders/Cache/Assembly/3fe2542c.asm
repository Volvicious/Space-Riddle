//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T vs_5_0 /O1 /E VS /Fo
//    \\?\C:\Projects\Vektoria_2016-06-09a_Patch3\Work\VektoriaApp\Shaders\Cache\Object\Release\VS.obj
//    /Fe
//    \\?\C:\Projects\Vektoria_2016-06-09a_Patch3\Work\VektoriaApp\Shaders\Cache\Error\VS.txt
//    /Fc
//    \\?\C:\Projects\Vektoria_2016-06-09a_Patch3\Work\VektoriaApp\Shaders\Cache\Assembly\3fe2542c.asm
//    \\?\C:\Projects\Vektoria_2016-06-09a_Patch3\Work\VektoriaApp\shaders\Source\shaders_Monolight.hlsl
//
//
// Buffer Definitions: 
//
// cbuffer ObjectInfo
// {
//
//   float4x4 mWorld;                   // Offset:    0 Size:    64
//   float4x4 mView;                    // Offset:   64 Size:    64
//   float4x4 mViewInv;                 // Offset:  128 Size:    64
//   float4x4 mProjection;              // Offset:  192 Size:    64
//   uint4 iLightsAffecting;            // Offset:  256 Size:    16
//   uint iLightCount;                  // Offset:  272 Size:     4 [unused]
//
// }
//
// Resource bind info for Lights
// {
//
//   struct SLight
//   {
//       
//       float3 f3Position;             // Offset:    0
//       uint uType;                    // Offset:   12
//       float4 f4Color;                // Offset:   16
//       float3 f3Direction;            // Offset:   32
//       float fInnerCosAngle;          // Offset:   44
//       float fOuterCosAngle;          // Offset:   48
//       float fAttenuationConstant;    // Offset:   52
//       float fAttenuationLinear;      // Offset:   56
//       float fAttenuationQuadratic;   // Offset:   60
//       bool bCauseShadow;             // Offset:   64
//       bool bSoftShadow;              // Offset:   68
//       bool bCascadedShadow;          // Offset:   72
//       float4x4 mLightViewProj;       // Offset:   76
//
//   } $Element;                        // Offset:    0 Size:   140
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// Lights                            texture  struct         r/o   10        1
// ObjectInfo                        cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// POSITION                 0   xyzw        0     NONE  float   xyzw
// NORMAL                   0   xyz         1     NONE  float   xyz 
// TEXCOORD                 0   xy          2     NONE  float   xy  
// TANGENT                  0   xyz         3     NONE  float   xyz 
// BITANGENT                0   xyz         4     NONE  float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float   xyzw
// NORMAL                   0   xyz         1     NONE  float   xyz 
// LIGHTS                   5      w        1     NONE  float      w
// TANGENT                  0   xyz         2     NONE  float   xyz 
// LIGHTS                  16      w        2     NONE  float      w
// BITANGENT                0   xyz         3     NONE  float   xyz 
// LIGHTS                  17      w        3     NONE  float      w
// TEXCOORD                 0   xy          4     NONE  float   xy  
// LIGHTS                   4     zw        4     NONE  float     zw
// TEXCOORD                 1   xyz         5     NONE  float   xyz 
// LIGHTS                  29      w        5     NONE  float      w
// TEXCOORD                 2   xyzw        6     NONE  float   xyzw
// LIGHTS                   0   xyzw        7     NONE  float   xyzw
// LIGHTS                   2   xyzw        8     NONE  float   xyzw
// LIGHTS                   3   xyzw        9     NONE  float   xyzw
// LIGHTS                   6   xyzw       10     NONE   uint   xyzw
// LIGHTS                  10   xyzw       11     NONE   uint   xyzw
// LIGHTS                  11   xyzw       12     NONE  float   xyzw
// LIGHTS                  12   xyzw       13     NONE  float   xyzw
// LIGHTS                  14   xyzw       14     NONE  float   xyzw
// LIGHTS                  15   xyzw       15     NONE  float   xyzw
// LIGHTS                  21   xyzw       16     NONE   uint   xyzw
// LIGHTS                  23   xyzw       17     NONE  float   xyzw
// LIGHTS                  24   xyzw       18     NONE  float   xyzw
// LIGHTS                  26   xyzw       19     NONE  float   xyzw
// LIGHTS                  27   xyz        20     NONE  float   xyz 
// LIGHTS                  32   xyzw       21     NONE   uint   xyzw
// LIGHTS                  35   xyzw       22     NONE  float   xyzw
// LIGHTS                  36   xyzw       23     NONE  float   xyzw
// LIGHTS                  38   xyzw       24     NONE  float   xyzw
// LIGHTS                  39   xyz        25     NONE  float   xyz 
// LIGHTS                  43   xyzw       26     NONE   uint   xyzw
// LIGHTS                  47   xyzw       27     NONE  float   xyzw
// COUNT                    0   x          28     NONE   uint   x   
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[17], immediateIndexed
dcl_resource_structured t10, 140 
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xy
dcl_input v3.xyz
dcl_input v4.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyz
dcl_output o1.w
dcl_output o2.xyz
dcl_output o2.w
dcl_output o3.xyz
dcl_output o3.w
dcl_output o4.xy
dcl_output o4.zw
dcl_output o5.xyz
dcl_output o5.w
dcl_output o6.xyzw
dcl_output o7.xyzw
dcl_output o8.xyzw
dcl_output o9.xyzw
dcl_output o10.xyzw
dcl_output o11.xyzw
dcl_output o12.xyzw
dcl_output o13.xyzw
dcl_output o14.xyzw
dcl_output o15.xyzw
dcl_output o16.xyzw
dcl_output o17.xyzw
dcl_output o18.xyzw
dcl_output o19.xyzw
dcl_output o20.xyz
dcl_output o21.xyzw
dcl_output o22.xyzw
dcl_output o23.xyzw
dcl_output o24.xyzw
dcl_output o25.xyz
dcl_output o26.xyzw
dcl_output o27.xyzw
dcl_output o28.x
dcl_temps 12
dp4 r0.x, v0.xyzw, cb0[0].xyzw
dp4 r0.y, v0.xyzw, cb0[1].xyzw
dp4 r0.z, v0.xyzw, cb0[2].xyzw
dp4 r0.w, v0.xyzw, cb0[3].xyzw
mul r1.xyzw, cb0[5].xyzw, cb0[12].yyyy
mad r1.xyzw, cb0[4].xyzw, cb0[12].xxxx, r1.xyzw
mad r1.xyzw, cb0[6].xyzw, cb0[12].zzzz, r1.xyzw
mad r1.xyzw, cb0[7].xyzw, cb0[12].wwww, r1.xyzw
mul r2.xyzw, cb0[5].xyzw, cb0[13].yyyy
mad r2.xyzw, cb0[4].xyzw, cb0[13].xxxx, r2.xyzw
mad r2.xyzw, cb0[6].xyzw, cb0[13].zzzz, r2.xyzw
mad r2.xyzw, cb0[7].xyzw, cb0[13].wwww, r2.xyzw
mul r3.xyzw, cb0[5].xyzw, cb0[14].yyyy
mad r3.xyzw, cb0[4].xyzw, cb0[14].xxxx, r3.xyzw
mad r3.xyzw, cb0[6].xyzw, cb0[14].zzzz, r3.xyzw
mad r3.xyzw, cb0[7].xyzw, cb0[14].wwww, r3.xyzw
mul r4.xyzw, cb0[5].xyzw, cb0[15].yyyy
mad r4.xyzw, cb0[4].xyzw, cb0[15].xxxx, r4.xyzw
mad r4.xyzw, cb0[6].xyzw, cb0[15].zzzz, r4.xyzw
mad r4.xyzw, cb0[7].xyzw, cb0[15].wwww, r4.xyzw
dp4 r1.x, r0.xyzw, r1.xyzw
dp4 r1.y, r0.xyzw, r2.xyzw
dp4 r1.z, r0.xyzw, r3.xyzw
dp4 o0.w, r0.xyzw, r4.xyzw
dp3 r2.x, v1.xyzx, cb0[0].xyzx
dp3 r2.y, v1.xyzx, cb0[1].xyzx
dp3 r2.z, v1.xyzx, cb0[2].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul o1.xyz, r1.wwww, r2.xyzx
dp3 r2.x, v3.xyzx, cb0[0].xyzx
dp3 r2.y, v3.xyzx, cb0[1].xyzx
dp3 r2.z, v3.xyzx, cb0[2].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul o2.xyz, r1.wwww, r2.xyzx
dp3 r2.x, v4.xyzx, cb0[0].xyzx
dp3 r2.y, v4.xyzx, cb0[1].xyzx
dp3 r2.z, v4.xyzx, cb0[2].xyzx
dp3 r1.w, r2.xyzx, r2.xyzx
rsq r1.w, r1.w
mul o3.xyz, r1.wwww, r2.xyzx
ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r2.xyzw, cb0[16].x, l(0), t10.xyzw
ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) o8.xyzw, cb0[16].x, l(16), t10.xyzw
ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r3.xyzw, cb0[16].x, l(32), t10.wxyz
ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r4.xyzw, cb0[16].x, l(48), t10.xyzw
ieq r1.w, r2.w, l(3)
if_nz r1.w
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r5.xyzw, cb0[16].x, l(64), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r6.xyz, cb0[16].x, l(80), t10.xyzx
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r7.xyzw, cb0[16].x, l(92), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r8.xyzw, cb0[16].x, l(108), t10.xyzw
  ld_structured_indexable(structured_buffer, stride=140)(mixed,mixed,mixed,mixed) r9.xyzw, cb0[16].x, l(124), t10.xyzw
  ine r5.xyz, r5.xyzx, l(0, 0, 0, 0)
  add r10.xyz, r0.xyzx, -r2.xyzx
  dp3 r1.w, r10.xyzx, r10.xyzx
  rsq r1.w, r1.w
  mul o7.yzw, r1.wwww, r10.xxyz
  dp3 r1.w, r3.yzwy, r3.yzwy
  rsq r1.w, r1.w
  mul r10.xyz, r1.wwww, r3.yzwy
  add r11.xyz, -r1.xyzx, r2.xyzx
  dp3 r1.w, r11.xyzx, r11.xyzx
  sqrt r1.w, r1.w
  add r6.w, r4.y, l(1.000000)
  mad r6.w, r4.z, r1.w, r6.w
  max r1.w, r1.w, l(1.000000)
  mul r1.w, r1.w, r1.w
  mad r1.w, r4.w, r1.w, r6.w
  div o7.x, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mul r11.xyzw, r6.xxxx, cb0[1].xyzw
  mad r11.xyzw, cb0[0].xyzw, r5.wwww, r11.xyzw
  mad r11.xyzw, cb0[2].xyzw, r6.yyyy, r11.xyzw
  mad r6.xyzw, cb0[3].xyzw, r6.zzzz, r11.xyzw
  mul r11.xyzw, r7.yyyy, cb0[1].xyzw
  mad r11.xyzw, cb0[0].xyzw, r7.xxxx, r11.xyzw
  mad r11.xyzw, cb0[2].xyzw, r7.zzzz, r11.xyzw
  mad r7.xyzw, cb0[3].xyzw, r7.wwww, r11.xyzw
  mul r11.xyzw, r8.yyyy, cb0[1].xyzw
  mad r11.xyzw, cb0[0].xyzw, r8.xxxx, r11.xyzw
  mad r11.xyzw, cb0[2].xyzw, r8.zzzz, r11.xyzw
  mad r8.xyzw, cb0[3].xyzw, r8.wwww, r11.xyzw
  mul r11.xyzw, r9.yyyy, cb0[1].xyzw
  mad r11.xyzw, cb0[0].xyzw, r9.xxxx, r11.xyzw
  mad r11.xyzw, cb0[2].xyzw, r9.zzzz, r11.xyzw
  mad r9.xyzw, cb0[3].xyzw, r9.wwww, r11.xyzw
  dp4 o12.x, v0.xyzw, r6.xyzw
  dp4 o12.y, v0.xyzw, r7.xyzw
  dp4 o12.z, v0.xyzw, r8.xyzw
  dp4 o12.w, v0.xyzw, r9.xyzw
  mov o1.w, r4.x
else 
  ieq r1.w, r2.w, l(2)
  add r6.xyz, r0.xyzx, -r2.xyzx
  dp3 r4.x, r6.xyzx, r6.xyzx
  rsq r4.x, r4.x
  mul r6.yzw, r4.xxxx, r6.xxyz
  add r2.xyz, -r1.xyzx, r2.xyzx
  dp3 r2.x, r2.xyzx, r2.xyzx
  sqrt r2.x, r2.x
  add r2.y, r4.y, l(1.000000)
  mad r2.y, r4.z, r2.x, r2.y
  max r2.x, r2.x, l(1.000000)
  mul r2.x, r2.x, r2.x
  mad r2.x, r4.w, r2.x, r2.y
  div r6.x, l(1.000000, 1.000000, 1.000000, 1.000000), r2.x
  dp3 r2.x, r3.yzwy, r3.yzwy
  rsq r2.x, r2.x
  mul r2.xyz, r2.xxxx, r3.yzwy
  mov r4.yzw, -r2.xxyz
  mov r4.x, l(1.000000)
  movc o7.xyzw, r1.wwww, r6.xyzw, r4.xyzw
  mov o12.xyzw, l(0,0,0,0)
  mov r10.xyz, l(0,0,0,0)
  mov r5.xyz, l(0,0,0,0)
  mov r3.x, l(0)
  mov o1.w, l(0)
endif 
mov o0.xyz, r1.xyzx
mov o2.w, l(0)
mov o3.w, l(0)
mov r3.yz, v2.xxyx
mov r3.w, l(0)
mov o4.xyzw, r3.yzxw
mov o5.x, cb0[8].w
mov o5.y, cb0[9].w
mov o5.z, cb0[10].w
mov o5.w, l(0)
mov o6.xyzw, r0.xyzw
mov o9.xyz, r10.xyzx
mov o9.w, l(0)
mov o10.xyz, r5.xyzx
mov o10.w, l(0)
mov o11.x, r2.w
mov o11.yzw, l(0,0,0,0)
mov o13.xyzw, l(0,0,0,0)
mov o14.xyzw, l(0,0,0,0)
mov o15.xyzw, l(0,0,0,0)
mov o16.xyzw, l(0,0,0,0)
mov o17.xyzw, l(0,0,0,0)
mov o18.xyzw, l(0,0,0,0)
mov o19.xyzw, l(0,0,0,0)
mov o21.xyzw, l(0,0,0,0)
mov o22.xyzw, l(0,0,0,0)
mov o23.xyzw, l(0,0,0,0)
mov o24.xyzw, l(0,0,0,0)
mov o26.xyzw, l(0,0,0,0)
mov o27.xyzw, l(0,0,0,0)
mov o20.xyz, l(0,0,0,0)
mov o25.xyz, l(0,0,0,0)
mov o28.x, l(1)
ret 
// Approximately 152 instruction slots used
