//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T ps_5_0 /O1 /E PS /Fo
//    \\?\C:\Projects\Vektoria_2016-06-09a_Patch3\Work\VektoriaApp\Shaders\Cache\Object\Release\PS.obj
//    /Fe
//    \\?\C:\Projects\Vektoria_2016-06-09a_Patch3\Work\VektoriaApp\Shaders\Cache\Error\PS.txt
//    /Fc
//    \\?\C:\Projects\Vektoria_2016-06-09a_Patch3\Work\VektoriaApp\Shaders\Cache\Assembly\dec5d4d3.asm
//    \\?\C:\Projects\Vektoria_2016-06-09a_Patch3\Work\VektoriaApp\Shaders\Source\shaders_Monolight.hlsl
//
//
// Buffer Definitions: 
//
// cbuffer TexInfo
// {
//
//   float4x4 mColor;                   // Offset:    0 Size:    64
//   float fBumpStrength;               // Offset:   64 Size:     4
//   float fHeightStrength;             // Offset:   68 Size:     4
//   float fGlowStrength;               // Offset:   72 Size:     4
//   float fSpecularStrength;           // Offset:   76 Size:     4
//   float fSpecularSharpness;          // Offset:   80 Size:     4
//   float fDiffuseSharpness;           // Offset:   84 Size:     4 [unused]
//   float fGlowSharpness;              // Offset:   88 Size:     4
//   float frTransparency;              // Offset:   92 Size:     4
//   float fDummy2;                     // Offset:   96 Size:     4 [unused]
//   float fFresnel;                    // Offset:  100 Size:     4
//   float fRefractionRatio;            // Offset:  104 Size:     4
//   float frTransparencyEdge;          // Offset:  108 Size:     4
//   float3 f3ColorSSS;                 // Offset:  112 Size:    12
//   float fDummy3;                     // Offset:  124 Size:     4 [unused]
//   float4 f4SSSBRDFParams;            // Offset:  128 Size:    16
//   uint uImage;                       // Offset:  144 Size:     4
//   uint uGlow;                        // Offset:  148 Size:     4
//   uint uSpecular;                    // Offset:  152 Size:     4
//   uint uBump;                        // Offset:  156 Size:     4
//   uint uImageBlack;                  // Offset:  160 Size:     4 [unused]
//   uint uGlowAsImage;                 // Offset:  164 Size:     4
//   uint uSpecularAsImage;             // Offset:  168 Size:     4
//   uint uHeightAsImage;               // Offset:  172 Size:     4 [unused]
//   uint uImageWhite;                  // Offset:  176 Size:     4 [unused]
//   uint uGlowWhite;                   // Offset:  180 Size:     4 [unused]
//   uint uSpecularWhite;               // Offset:  184 Size:     4
//   uint uHeight;                      // Offset:  188 Size:     4 [unused]
//   uint uShadingOn;                   // Offset:  192 Size:     4
//   uint uGlowAsAmbient;               // Offset:  196 Size:     4 [unused]
//   uint uChromaKeying;                // Offset:  200 Size:     4
//   uint uEnvironment;                 // Offset:  204 Size:     4
//   uint uPOM;                         // Offset:  208 Size:     4
//   uint uTexBRDF;                     // Offset:  212 Size:     4 [unused]
//   uint uTexSSS;                      // Offset:  216 Size:     4
//   uint uReflectionMap;               // Offset:  220 Size:     4 [unused]
//   uint uixPos;                       // Offset:  224 Size:     4
//   uint uiyPos;                       // Offset:  228 Size:     4
//   uint uixPics;                      // Offset:  232 Size:     4
//   uint uiyPics;                      // Offset:  236 Size:     4
//
// }
//
// cbuffer ViewportArt
// {
//
//   float4 f4SceneColorAmbient;        // Offset:    0 Size:    16
//   float4 f4FogParams;                // Offset:   16 Size:    16
//   float4x4 mColorModification;       // Offset:   32 Size:    64
//   uint uStyleColor;                  // Offset:   96 Size:     4
//   uint uPostprocessing;              // Offset:  100 Size:     4
//   uint uStylePopart;                 // Offset:  104 Size:     4 [unused]
//   uint uStyleOutlining;              // Offset:  108 Size:     4 [unused]
//   uint uStyleMonochrome;             // Offset:  112 Size:     4 [unused]
//   uint uStyleOwn;                    // Offset:  116 Size:     4 [unused]
//   uint uStyleFog;                    // Offset:  120 Size:     4
//   uint uPad0;                        // Offset:  124 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// linearSampler                     sampler      NA          NA    0        1
// shadowSampler                   sampler_c      NA          NA    2        1
// shadowMap                         texture  float4          2d   11        1
// tex2D[0]                          texture  float4          2d   15        1
// tex2D[1]                          texture  float4          2d   16        1
// tex2D[2]                          texture  float4          2d   17        1
// tex2D[3]                          texture  float4          2d   18        1
// tex2D[4]                          texture  float4          2d   19        1
// tex2D[5]                          texture  float4          2d   20        1
// tex2D[6]                          texture  float4          2d   21        1
// TexInfo                           cbuffer      NA          NA    1        1
// ViewportArt                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// NORMAL                   0   xyz         1     NONE  float   xyz 
// LIGHTS                   5      w        1     NONE  float      w
// TANGENT                  0   xyz         2     NONE  float   xyz 
// LIGHTS                  16      w        2     NONE  float       
// BITANGENT                0   xyz         3     NONE  float   xyz 
// LIGHTS                  17      w        3     NONE  float       
// TEXCOORD                 0   xy          4     NONE  float   xy  
// LIGHTS                   4     zw        4     NONE  float     z 
// TEXCOORD                 1   xyz         5     NONE  float   xyz 
// LIGHTS                  29      w        5     NONE  float       
// TEXCOORD                 2   xyzw        6     NONE  float   xyz 
// LIGHTS                   0   xyzw        7     NONE  float   xyzw
// LIGHTS                   2   xyzw        8     NONE  float   xyz 
// LIGHTS                   3   xyzw        9     NONE  float   xyz 
// LIGHTS                   6   xyzw       10     NONE   uint   xy  
// LIGHTS                  10   xyzw       11     NONE   uint   x   
// LIGHTS                  11   xyzw       12     NONE  float   xyzw
// LIGHTS                  12   xyzw       13     NONE  float       
// LIGHTS                  14   xyzw       14     NONE  float       
// LIGHTS                  15   xyzw       15     NONE  float       
// LIGHTS                  21   xyzw       16     NONE   uint       
// LIGHTS                  23   xyzw       17     NONE  float       
// LIGHTS                  24   xyzw       18     NONE  float       
// LIGHTS                  26   xyzw       19     NONE  float       
// LIGHTS                  27   xyz        20     NONE  float       
// LIGHTS                  32   xyzw       21     NONE   uint       
// LIGHTS                  35   xyzw       22     NONE  float       
// LIGHTS                  36   xyzw       23     NONE  float       
// LIGHTS                  38   xyzw       24     NONE  float       
// LIGHTS                  39   xyz        25     NONE  float       
// LIGHTS                  43   xyzw       26     NONE   uint       
// LIGHTS                  47   xyzw       27     NONE  float       
// COUNT                    0   x          28     NONE   uint       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[15], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v3.xyz
dcl_input_ps linear v4.xy
dcl_input_ps linear v4.z
dcl_input_ps linear v5.xyz
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyz
dcl_input_ps constant v10.xy
dcl_input_ps constant v11.x
dcl_input_ps linear v12.xyzw
dcl_output o0.xyzw
dcl_temps 15
add r0.xyz, -v5.xyzx, v6.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r1.xyz, r0.wwww, r0.xyzx
ult r2.xy, l(1, 1, 0, 0), cb1[14].zwzz
or r1.w, r2.y, r2.x
utof r2.xyzw, cb1[14].xyzw
div r2.xy, r2.xyxx, r2.zwzz
div r2.zw, l(1.000000, 1.000000, 1.000000, 1.000000), r2.zzzw
mad r2.xy, v4.xyxx, r2.zwzz, r2.xyxx
movc r2.xy, r1.wwww, r2.xyxx, v4.xyxx
ieq r1.w, cb1[13].x, l(1)
if_nz r1.w
  dp3 r3.x, r1.xyzx, v2.xyzx
  dp3 r3.y, r1.xyzx, -v3.xyzx
  dp3 r1.w, r1.xyzx, v1.xyzx
  mul r2.zw, -r3.xxxy, cb1[4].yyyy
  mul r2.zw, r2.zzzw, l(0.000000, 0.000000, 0.020000, 0.020000)
  div r2.zw, r2.zzzw, r1.wwww
  mad r1.w, r1.w, l(-15.000000), l(20.000000)
  ftoi r3.x, r1.w
  round_z r1.w, r1.w
  div r1.w, l(1.000000, 1.000000, 1.000000, 1.000000), r1.w
  mul r3.yz, r1.wwww, r2.zzwz
  deriv_rtx_coarse r4.xy, r2.xyxx
  deriv_rty_coarse r4.zw, r2.xxxy
  add r3.w, -r1.w, l(1.000000)
  iadd r5.x, r3.x, l(1)
  mov r6.xyzw, l(0,0,0,0)
  mov r7.xy, l(0,0,0,0)
  mov r8.y, r3.w
  mov r8.xzw, l(0,0,1.000000,0)
  loop 
    ilt r7.z, r3.x, r8.x
    breakc_nz r7.z
    add r7.zw, r2.xxxy, r6.xxxy
    sample_d_indexable(texture2d)(float,float,float,float) r7.z, r7.zwzz, t20.yzxw, s0, r4.xyxx, r4.zwzz
    add r7.z, r7.z, r8.w
    mul r9.w, r7.z, l(0.500000)
    lt r7.w, r8.y, r9.w
    add r10.x, -r8.z, r8.w
    mad r7.z, -r7.z, l(0.500000), r8.w
    add r7.z, r8.y, r7.z
    add r7.z, -r8.z, r7.z
    div r7.z, r10.x, r7.z
    mad r10.xy, r7.zzzz, r3.yzyy, r6.zwzz
    iadd r9.x, r8.x, l(1)
    mad r10.zw, r2.zzzw, r1.wwww, r6.xxxy
    add r9.y, -r1.w, r8.y
    movc r10.zw, r7.wwww, r6.xxxy, r10.zzzw
    movc r6.zw, r7.wwww, r6.zzzw, r6.xxxy
    movc r7.xy, r7.wwww, r10.xyxx, r7.xyxx
    mov r5.yzw, r8.yyzw
    mov r9.z, r5.y
    movc r8.xyzw, r7.wwww, r5.xyzw, r9.xyzw
    mov r6.xy, r10.zwzz
  endloop 
  add r2.xy, r2.xyxx, r7.xyxx
endif 
if_nz cb1[9].w
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r2.xyxx, t18.xyzw, s0
  mad r3.xyz, r3.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000), l(-1.000000, -1.000000, -1.000000, 0.000000)
  mul r2.zw, r3.xxxy, cb1[4].xxxx
  mul r3.xyw, r2.wwww, v3.xyxz
  mad r3.xyw, r2.zzzz, v2.xyxz, r3.xyxw
  mad r3.xyz, r3.zzzz, v1.xyzx, r3.xywx
  dp3 r1.w, r3.xyzx, r3.xyzx
  rsq r1.w, r1.w
  mul r3.xyz, r1.wwww, r3.xyzx
else 
  mov r3.xyz, v1.xyzx
endif 
dp3_sat r1.w, -v7.yzwy, r3.xyzx
ieq r2.z, v11.x, l(3)
if_nz r2.z
  dp3 r2.z, v7.yzwy, v9.xyzx
  lt r2.w, v1.w, r2.z
  if_nz r2.w
    lt r2.w, r2.z, v4.z
    add r2.z, r2.z, -v1.w
    add r3.w, -v1.w, v4.z
    div r2.z, r2.z, r3.w
    movc r2.z, r2.w, r2.z, l(1.000000)
    if_nz v10.x
      div r4.xyz, v12.xyzx, v12.wwww
      mad r5.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000), l(0.500000, 0.500000, 0.000000, 0.000000)
      if_nz v10.y
        resinfo_indexable(texture2d)(float,float,float,float) r4.xy, l(0), t11.xyzw
        div r4.xy, l(1.316130, 1.316130, 0.000000, 0.000000), r4.xyxx
        mad r6.xy, r4.xyxx, l(-2.000000, -2.000000, 0.000000, 0.000000), r5.xyxx
        sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r6.xyxx, t11.xxxx, s2, r4.z
        mad r6.zw, r4.yyyx, l(0.000000, 0.000000, 2.000000, 2.000000), r5.yyyx
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xzxx, t11.xxxx, s2, r4.z
        mul r3.w, r3.w, l(0.003663)
        mad r2.w, r2.w, l(0.003663), r3.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.wyww, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.003663), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.wzww, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.003663), r2.w
        mov r5.zw, r6.xxxw
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.zyzz, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.025641), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.wyww, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.025641), r2.w
        mov r6.x, r5.x
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xyxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.025641), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xzxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.025641), r2.w
        add r7.xy, -r4.xyxx, r5.xyxx
        mov r7.z, r5.y
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r7.xzxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.095238), r2.w
        add r8.xy, r4.xyxx, r5.xyxx
        mov r8.z, r7.z
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r8.xzxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.095238), r2.w
        mov r6.w, r7.y
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r6.xwxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.095238), r2.w
        mov r8.w, r6.x
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r8.wyww, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.095238), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r7.xyxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.058608), r2.w
        mov r9.z, r8.x
        mov r9.x, r6.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r9.zxzz, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.058608), r2.w
        mov r7.w, r8.y
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r7.xwxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.058608), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r8.xyxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.058608), r2.w
        mov r9.yw, r5.zzzw
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r9.yxyy, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.014652), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r9.wxww, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.014652), r2.w
        mov r8.xz, r9.yywy
        mov r8.y, r7.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r8.xyxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.014652), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r8.zyzz, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.014652), r2.w
        mov r9.x, r7.x
        mov r9.yw, r6.yyyz
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r9.xyxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.014652), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r9.zyzz, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.014652), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r9.xwxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.014652), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r9.zwzz, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.014652), r2.w
        sample_c_lz_indexable(texture2d)(float,float,float,float) r3.w, r5.xyxx, t11.xxxx, s2, r4.z
        mad r2.w, r3.w, l(0.150183), r2.w
      else 
        sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r5.xyxx, t11.xxxx, s2, r4.z
      endif 
    else 
      mov r2.w, l(1.000000)
    endif 
  else 
    mov r2.zw, l(0,0,0,1.000000)
  endif 
else 
  mov r2.zw, l(0,0,1.000000,1.000000)
endif 
mul r3.w, r1.w, v7.x
mul r4.xyz, r3.wwww, v8.xyzx
mul r4.xyz, r2.wwww, r4.xyzx
mul r4.xyz, r2.zzzz, r4.xyzx
if_nz cb1[9].z
  mad r0.xyz, r0.xyzx, r0.wwww, v7.yzwy
  dp3 r0.w, r0.xyzx, r0.xyzx
  rsq r0.w, r0.w
  mul r0.xyz, r0.wwww, r0.xyzx
  dp3 r0.w, r3.xyzx, r3.xyzx
  rsq r0.w, r0.w
  mul r5.xyz, r0.wwww, r3.xyzx
  dp3_sat r0.x, r5.xyzx, -r0.xyzx
  log r0.x, r0.x
  mul r0.x, r0.x, cb1[5].x
  exp r0.x, r0.x
  if_nz cb1[11].z
    mov r5.xyzw, l(1.000000,1.000000,1.000000,1.000000)
  else 
    if_nz cb1[10].z
      sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.xyxx, t15.xyzw, s0
    else 
      sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.xyxx, t17.xyzw, s0
    endif 
  endif 
  mul r0.yzw, r5.zzzz, v8.xxyz
  add r0.yzw, r0.yyzw, r0.yyzw
  mul r6.xyz, r4.xyzx, r0.xxxx
  mul r0.xyz, r0.yzwy, r6.xyzx
  mul r0.xyz, r0.xyzx, cb1[4].wwww
else 
  mov r0.xyz, l(0,0,0,0)
  mov r5.xyw, l(0,0,0,1.000000)
endif 
mad r0.w, -r1.w, cb1[5].z, l(1.000000)
max r0.w, r0.w, l(0.000000)
if_nz cb1[9].y
  if_nz cb1[10].y
    sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r2.xyxx, t15.xyzw, s0
  else 
    sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r2.xyxx, t16.xyzw, s0
  endif 
else 
  sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r2.xyxx, t15.xyzw, s0
  mul r6.xyzw, r7.xyzw, cb2[0].xyzw
endif 
mul r6.xyz, r0.wwww, r6.xyzx
dp4 r7.x, r6.xyzw, cb1[0].xyzw
dp4 r7.y, r6.xyzw, cb1[1].xyzw
dp4 r7.z, r6.xyzw, cb1[2].xyzw
add r0.w, -r5.w, l(1.000000)
mul r6.xyz, r0.wwww, r6.xyzx
mad r6.xyz, r7.xyzx, r5.wwww, r6.xyzx
mul r6.xyz, r6.xyzx, cb1[4].zzzz
if_nz cb1[9].x
  sample_indexable(texture2d)(float,float,float,float) r7.xyzw, r2.xyxx, t15.xyzw, s0
  dp4 r8.x, r7.xyzw, cb1[0].xyzw
  dp4 r8.y, r7.xyzw, cb1[1].xyzw
  dp4 r8.z, r7.xyzw, cb1[2].xyzw
  dp4 r8.w, r7.xyzw, cb1[3].xyzw
  mul r7.xyzw, r0.wwww, r7.xyzw
  mad r7.xyzw, r8.xyzw, r5.wwww, r7.xyzw
else 
  mov r7.xyzw, l(0,0,0,0)
endif 
if_nz cb1[12].z
  resinfo_indexable(texture2d)(float,float,float,float)_uint r2.zw, l(0), t15.zwxy
  ld_indexable(texture2d)(float,float,float,float) r8.xyz, l(0, 0, 0, 0), t15.xyzw
  utof r2.zw, r2.zzzw
  mul r2.zw, r2.zzzw, r2.xxxy
  ftoi r9.xy, r2.zwzz
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r9.xyzw, r9.xyzw, t15.xyzw
  eq r8.xyz, r9.xyzx, r8.xyzx
  and r0.w, r8.y, r8.x
  and r0.w, r8.z, r0.w
  mov r7.w, l(0)
  movc r7.xyzw, r0.wwww, r7.xyzw, r9.xyzw
endif 
mad r4.xyz, r4.xyzx, r7.xyzx, r6.xyzx
movc r4.xyz, cb1[12].xxxx, r4.xyzx, r7.xyzx
dp3 r0.w, -r1.xyzx, r3.xyzx
max r0.w, r0.w, l(0.000000)
add r1.w, -r0.w, l(1.000000)
mul r2.z, r1.w, r1.w
mul r2.w, r2.z, r2.z
mul r1.w, r1.w, r2.w
mul r2.w, r1.w, cb1[6].y
if_nz cb1[12].w
  add r3.w, -r5.y, l(1.000000)
  mad r4.w, r3.w, r2.w, r5.y
  min r4.w, r4.w, l(1.000000)
  mad r2.w, -r3.w, r2.w, r5.x
  max r2.w, r2.w, l(0.000000)
  add r3.w, -r2.w, l(1.000000)
  add r3.w, -r4.w, r3.w
  add r3.w, -r5.y, r3.w
  dp3 r5.x, r1.xyzx, r3.xyzx
  add r5.z, r5.x, r5.x
  mad r6.xyz, r3.yxzy, -r5.zzzz, r1.yxzy
  mul r5.z, cb1[6].z, cb1[6].z
  mad r5.w, -r5.x, r5.x, l(1.000000)
  mad r5.z, -r5.z, r5.w, l(1.000000)
  sqrt r5.w, r5.z
  mad r5.x, cb1[6].z, r5.x, r5.w
  ge r5.z, r5.z, l(0.000000)
  mul r7.xyz, r3.yxzy, r5.xxxx
  mad r7.xyz, cb1[6].zzzz, r1.yxzy, -r7.xyzx
  and r5.xzw, r5.zzzz, r7.xxyz
  ieq r6.w, cb1[12].w, l(2)
  if_nz r6.w
    ge r8.xyzw, |r5.xxzz|, |r5.zwxw|
    lt r7.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r5.xzwx
    div r9.xyzw, -r5.zwxw, |r5.wxzz|
    div r10.xyzw, r5.zzww, |r5.wxxz|
    mov r11.x, r10.y
    mov r11.y, r9.y
    mov r11.zw, l(0,0,0.500000,0.250000)
    mov r12.xw, r11.xxxw
    mov r12.y, r10.z
    mov r12.z, l(0.833333)
    movc r11.xyzw, r7.xxxx, r11.xyzw, r12.xyzw
    and r8.xy, r8.ywyy, r8.xzxx
    mov r12.x, r10.w
    mov r12.y, r9.z
    mov r12.zw, l(0,0,0.833333,0.750000)
    mov r13.xy, r9.wzww
    mov r13.zw, l(0,0,0.166667,0.750000)
    movc r12.xyzw, r7.yyyy, r12.xyzw, r13.xyzw
    div r9.y, -r5.x, |r5.w|
    mov r9.zw, l(0,0,0.166667,0.250000)
    mov r10.y, r9.y
    mov r10.zw, l(0,0,0.500000,0.750000)
    movc r9.xyzw, r7.zzzz, r9.xyzw, r10.xyzw
    movc r9.xyzw, r8.yyyy, r12.xyzw, r9.xyzw
    movc r8.xyzw, r8.xxxx, r11.xyzw, r9.xyzw
    max r7.x, |r8.y|, |r8.x|
    mad r8.xy, r8.xyxx, l(0.166666, 0.249999, 0.000000, 0.000000), r8.zwzz
    ge r9.xyzw, |r6.xxyy|, |r6.yzxz|
    lt r10.xyz, l(0.000000, 0.000000, 0.000000, 0.000000), r6.xyzx
    div r11.xyzw, -r6.yzxz, |r6.zxyy|
    div r12.xyzw, r6.yyzz, |r6.zxxy|
    mov r13.x, r12.y
    mov r13.y, r11.y
    mov r13.zw, l(0,0,0.500000,0.250000)
    mov r14.xw, r13.xxxw
    mov r14.y, r12.z
    mov r14.z, l(0.833333)
    movc r13.xyzw, r10.xxxx, r13.xyzw, r14.xyzw
    and r8.zw, r9.yyyw, r9.xxxz
    mov r9.x, r12.w
    mov r9.y, r11.z
    mov r9.zw, l(0,0,0.833333,0.750000)
    mov r14.xy, r11.wzww
    mov r14.zw, l(0,0,0.166667,0.750000)
    movc r9.xyzw, r10.yyyy, r9.xyzw, r14.xyzw
    div r11.y, -r6.x, |r6.z|
    mov r11.zw, l(0,0,0.166667,0.250000)
    mov r12.y, r11.y
    mov r12.zw, l(0,0,0.500000,0.750000)
    movc r10.xyzw, r10.zzzz, r11.xyzw, r12.xyzw
    movc r9.xyzw, r8.wwww, r9.xyzw, r10.xyzw
    movc r9.xyzw, r8.zzzz, r13.xyzw, r9.xyzw
    max r7.y, |r9.y|, |r9.x|
    mad r8.zw, r9.xxxy, l(0.000000, 0.000000, 0.166666, 0.249999), r9.zzzw
  else 
    div r6.w, r5.z, r5.w
    min r7.z, |r6.w|, l(1.000000)
    max r9.x, |r6.w|, l(1.000000)
    div r9.x, l(1.000000, 1.000000, 1.000000, 1.000000), r9.x
    mul r7.z, r7.z, r9.x
    mul r9.x, r7.z, r7.z
    mad r9.y, r9.x, l(0.020835), l(-0.085133)
    mad r9.y, r9.x, r9.y, l(0.180141)
    mad r9.y, r9.x, r9.y, l(-0.330299)
    mad r9.x, r9.x, r9.y, l(0.999866)
    mul r9.y, r7.z, r9.x
    lt r9.z, l(1.000000), |r6.w|
    mad r9.y, r9.y, l(-2.000000), l(1.570796)
    and r9.y, r9.z, r9.y
    mad r7.z, r7.z, r9.x, r9.y
    min r6.w, r6.w, l(1.000000)
    lt r6.w, r6.w, -r6.w
    movc r6.w, r6.w, -r7.z, r7.z
    ge r5.z, r5.z, l(0.000000)
    lt r5.w, r5.w, l(0.000000)
    add r9.xy, r6.wwww, l(3.141593, 6.283185, 0.000000, 0.000000)
    movc r6.w, r5.w, r9.x, r6.w
    movc r5.w, r5.w, r9.x, r9.y
    movc r5.z, r5.z, r6.w, r5.w
    add r5.w, -|r5.x|, l(1.000000)
    sqrt r5.w, r5.w
    mad r6.w, |r5.x|, l(-0.018729), l(0.074261)
    mad r6.w, r6.w, |r5.x|, l(-0.212114)
    mad r6.w, r6.w, |r5.x|, l(1.570729)
    mul r7.z, r5.w, r6.w
    mad r7.z, r7.z, l(-2.000000), l(3.141593)
    lt r5.x, r5.x, -r5.x
    and r5.x, r5.x, r7.z
    mad r5.x, r6.w, r5.w, r5.x
    mul r8.xy, r5.zxzz, l(0.159155, 0.318310, 0.000000, 0.000000)
    lt r5.x, r5.z, l(0.062832)
    lt r5.z, l(6.220354), r5.z
    or r5.x, r5.x, r5.z
    and r7.x, r5.x, l(0x3f800000)
    div r5.x, r6.y, r6.z
    min r5.z, |r5.x|, l(1.000000)
    max r5.w, |r5.x|, l(1.000000)
    div r5.w, l(1.000000, 1.000000, 1.000000, 1.000000), r5.w
    mul r5.z, r5.w, r5.z
    mul r5.w, r5.z, r5.z
    mad r6.w, r5.w, l(0.020835), l(-0.085133)
    mad r6.w, r5.w, r6.w, l(0.180141)
    mad r6.w, r5.w, r6.w, l(-0.330299)
    mad r5.w, r5.w, r6.w, l(0.999866)
    mul r6.w, r5.w, r5.z
    lt r7.z, l(1.000000), |r5.x|
    mad r6.w, r6.w, l(-2.000000), l(1.570796)
    and r6.w, r7.z, r6.w
    mad r5.z, r5.z, r5.w, r6.w
    min r5.x, r5.x, l(1.000000)
    lt r5.x, r5.x, -r5.x
    movc r5.x, r5.x, -r5.z, r5.z
    ge r5.z, r6.y, l(0.000000)
    lt r5.w, r6.z, l(0.000000)
    add r6.yz, r5.xxxx, l(0.000000, 3.141593, 6.283185, 0.000000)
    movc r5.x, r5.w, r6.y, r5.x
    movc r5.w, r5.w, r6.y, r6.z
    movc r5.x, r5.z, r5.x, r5.w
    add r5.z, -|r6.x|, l(1.000000)
    sqrt r5.z, r5.z
    mad r5.w, |r6.x|, l(-0.018729), l(0.074261)
    mad r5.w, r5.w, |r6.x|, l(-0.212114)
    mad r5.w, r5.w, |r6.x|, l(1.570729)
    mul r6.y, r5.z, r5.w
    mad r6.y, r6.y, l(-2.000000), l(3.141593)
    lt r6.x, r6.x, -r6.x
    and r6.x, r6.x, r6.y
    mad r5.z, r5.w, r5.z, r6.x
    mul r8.zw, r5.xxxz, l(0.000000, 0.000000, 0.159155, 0.318310)
    lt r5.z, r5.x, l(0.062832)
    lt r5.x, l(6.220354), r5.x
    or r5.x, r5.z, r5.x
    and r7.y, r5.x, l(0x3f800000)
  endif 
  resinfo_indexable(texture2d)(float,float,float,float)_uint r5.xz, l(0), t19.xzyw
  lt r6.xy, l(0.900000, 0.900000, 0.000000, 0.000000), r7.xyxx
  sample_indexable(texture2d)(float,float,float,float) r7.xyz, r8.xyxx, t19.xyzw, s0
  if_nz r6.x
    utof r6.xz, r5.xxzx
    mul r6.xz, r6.xxzx, r8.xxyx
    ftoi r9.xy, r6.xzxx
    mov r9.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r7.xyz, r9.xyzw, t19.xyzw
  endif 
  sample_indexable(texture2d)(float,float,float,float) r6.xzw, r8.zwzz, t19.xwyz, s0
  if_nz r6.y
    utof r5.xz, r5.xxzx
    mul r5.xz, r5.xxzx, r8.zzwz
    ftoi r8.xy, r5.xzxx
    mov r8.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r6.xzw, r8.xyzw, t19.xwyz
  endif 
  mul r5.xzw, r4.wwww, r6.xxzw
  mad r5.xzw, r7.xxyz, r2.wwww, r5.xxzw
  mad r5.xyz, r0.xyzx, r5.yyyy, r5.xzwx
  mad r5.xyz, r4.xyzx, r3.wwww, r5.xyzx
else 
  mad r1.w, r1.w, cb1[6].y, l(1.000000)
  mad r5.xyz, r0.xyzx, r1.wwww, r4.xyzx
endif 
mov_sat r7.w, r7.w
add r1.w, l(1.000000), -cb1[5].w
mul r1.w, r1.w, r7.w
movc r5.w, cb1[9].x, r1.w, l(1.000000)
if_nz cb1[13].z
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.xyxx, t15.xyzw, s0
  sample_indexable(texture2d)(float,float,float,float) r2.xyw, r2.xyxx, t21.xywz, s0
  dp3 r1.w, r2.xywx, r2.xywx
  sqrt r1.w, r1.w
  dp3 r2.x, v7.yzwy, r3.xyzx
  mad r2.y, r2.x, l(0.500000), l(0.500000)
  dp3 r2.w, -r3.xyzx, v7.yzwy
  max r2.w, r2.w, l(0.000000)
  dp3 r1.x, r1.xyzx, v7.yzwy
  mad r1.x, r1.x, l(0.500000), l(0.500000)
  mul r1.x, r1.x, cb1[8].x
  mad r1.x, cb1[8].x, r2.w, r1.x
  mul r1.xyz, r1.xxxx, cb1[7].xyzx
  mul r1.xyz, r1.wwww, r1.xyzx
  max r1.w, r2.x, l(0.000000)
  mul r6.xyz, r0.xyzx, r1.wwww
  mul r2.xzw, r2.zzzz, r6.xxyz
  mad r1.xyz, r2.yyyy, r4.xyzx, r1.xyzx
  mad r1.xyz, r2.xzwx, cb1[8].zzzz, r1.xyzx
  add r2.xyz, r3.xyzx, v7.yzwy
  dp3 r1.w, r2.xyzx, r2.xyzx
  rsq r1.w, r1.w
  mul r2.xyz, r1.wwww, r2.xyzx
  dp3_sat r1.w, r3.xyzx, r2.xyzx
  mul r0.xyz, r0.xyzx, r1.wwww
  mad r0.xyz, r0.xyzx, cb1[8].yyyy, r1.xyzx
  mul r1.xyz, r0.xyzx, v8.xyzx
  mov r1.w, l(1.000000)
  mul r5.xyzw, r1.xyzw, r5.xyzw
endif 
lt r0.x, cb1[6].w, l(1000000.000000)
mul r0.y, r0.w, cb1[6].w
min r0.y, r0.y, l(1.000000)
mul r0.y, r0.y, r5.w
movc r0.w, r0.x, r0.y, r5.w
add r1.xyz, v5.xyzx, -v6.xyzx
dp3 r1.x, r1.xyzx, r1.xyzx
sqrt r1.x, r1.x
div r1.x, r1.x, cb2[1].w
add r1.xyz, r1.xxxx, r5.xyzx
movc r0.xyz, cb2[7].zzzz, r1.xyzx, r5.xyzx
dp4 r1.x, r0.xyzw, cb2[2].xyzw
dp4 r1.y, r0.xyzw, cb2[3].xyzw
dp4 r1.z, r0.xyzw, cb2[4].xyzw
dp4 r1.w, r0.xyzw, cb2[5].xyzw
movc r0.xyzw, cb2[6].xxxx, r1.xyzw, r0.xyzw
mad r1.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.250000, 0.250000, 0.250000, 0.000000)
movc o0.xyz, cb2[6].yyyy, r1.xyzx, r0.xyzx
mov o0.w, r0.w
ret 
// Approximately 495 instruction slots used
