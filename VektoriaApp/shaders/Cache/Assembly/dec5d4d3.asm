//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /T ps_5_0 /Zi /Od /Gfp /E PS /Fo
//    \\?\C:\Projects\Vektoria_2016-06-20\Work\VektoriaApp\Shaders\Cache\Object\Debug\PS.obj
//    /Fe
//    \\?\C:\Projects\Vektoria_2016-06-20\Work\VektoriaApp\Shaders\Cache\Error\PS.txt
//    /Fc
//    \\?\C:\Projects\Vektoria_2016-06-20\Work\VektoriaApp\Shaders\Cache\Assembly\dec5d4d3.asm
//    \\?\C:\Projects\Vektoria_2016-06-20\Work\VektoriaApp\Shaders\Source\shaders_Standard.hlsl
//
//
// Buffer Definitions: 
//
// cbuffer TexInfo
// {
//
//   float4x4 mColor;                   // Offset:    0 Size:    64
//   float fBumpStrength;               // Offset:   64 Size:     4
//   float fHeightStrength;             // Offset:   68 Size:     4
//   float fGlowStrength;               // Offset:   72 Size:     4
//   float fSpecularStrength;           // Offset:   76 Size:     4 [unused]
//   float fSpecularSharpness;          // Offset:   80 Size:     4
//   float fDiffuseSharpness;           // Offset:   84 Size:     4 [unused]
//   float fGlowSharpness;              // Offset:   88 Size:     4 [unused]
//   float frTransparency;              // Offset:   92 Size:     4
//   float fDummy2;                     // Offset:   96 Size:     4 [unused]
//   float fFresnel;                    // Offset:  100 Size:     4
//   float fRefractionRatio;            // Offset:  104 Size:     4
//   float frTransparencyEdge;          // Offset:  108 Size:     4 [unused]
//   float3 f3ColorSSS;                 // Offset:  112 Size:    12
//   float fDummy3;                     // Offset:  124 Size:     4 [unused]
//   float4 f4SSSBRDFParams;            // Offset:  128 Size:    16
//   uint uImage;                       // Offset:  144 Size:     4
//   uint uGlow;                        // Offset:  148 Size:     4
//   uint uSpecular;                    // Offset:  152 Size:     4
//   uint uBump;                        // Offset:  156 Size:     4
//   uint uImageBlack;                  // Offset:  160 Size:     4 [unused]
//   uint uGlowAsImage;                 // Offset:  164 Size:     4
//   uint uSpecularAsImage;             // Offset:  168 Size:     4
//   uint uHeightAsImage;               // Offset:  172 Size:     4 [unused]
//   uint uImageWhite;                  // Offset:  176 Size:     4 [unused]
//   uint uGlowWhite;                   // Offset:  180 Size:     4 [unused]
//   uint uSpecularWhite;               // Offset:  184 Size:     4
//   uint uHeight;                      // Offset:  188 Size:     4 [unused]
//   uint uShadingOn;                   // Offset:  192 Size:     4
//   uint uGlowAsAmbient;               // Offset:  196 Size:     4 [unused]
//   uint uChromaKeying;                // Offset:  200 Size:     4
//   uint uEnvironment;                 // Offset:  204 Size:     4
//   uint uPOM;                         // Offset:  208 Size:     4
//   uint uTexBRDF;                     // Offset:  212 Size:     4 [unused]
//   uint uTexSSS;                      // Offset:  216 Size:     4
//   uint uReflectionMap;               // Offset:  220 Size:     4 [unused]
//   uint uixPos;                       // Offset:  224 Size:     4
//   uint uiyPos;                       // Offset:  228 Size:     4
//   uint uixPics;                      // Offset:  232 Size:     4
//   uint uiyPics;                      // Offset:  236 Size:     4
//
// }
//
// cbuffer ViewportArt
// {
//
//   float4 f4SceneColorAmbient;        // Offset:    0 Size:    16
//   float4 f4FogParams;                // Offset:   16 Size:    16
//   float4x4 mColorModification;       // Offset:   32 Size:    64
//   uint uStyleColor;                  // Offset:   96 Size:     4
//   uint uPostprocessing;              // Offset:  100 Size:     4
//   uint uStylePopart;                 // Offset:  104 Size:     4 [unused]
//   uint uStyleOutlining;              // Offset:  108 Size:     4 [unused]
//   uint uStyleMonochrome;             // Offset:  112 Size:     4 [unused]
//   uint uStyleOwn;                    // Offset:  116 Size:     4 [unused]
//   uint uStyleFog;                    // Offset:  120 Size:     4
//   uint uPad0;                        // Offset:  124 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// linearSampler                     sampler      NA          NA    0        1
// shadowSampler                   sampler_c      NA          NA    2        1
// shadowMap                         texture  float4          2d   11        1
// tex2D[0]                          texture  float4          2d   15        1
// tex2D[1]                          texture  float4          2d   16        1
// tex2D[2]                          texture  float4          2d   17        1
// tex2D[3]                          texture  float4          2d   18        1
// tex2D[4]                          texture  float4          2d   19        1
// tex2D[5]                          texture  float4          2d   20        1
// tex2D[6]                          texture  float4          2d   21        1
// TexInfo                           cbuffer      NA          NA    1        1
// ViewportArt                       cbuffer      NA          NA    2        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// NORMAL                   0   xyz         1     NONE  float   xyz 
// LIGHTS                   5      w        1     NONE  float      w
// TANGENT                  0   xyz         2     NONE  float   xyz 
// LIGHTS                  16      w        2     NONE  float      w
// BITANGENT                0   xyz         3     NONE  float   xyz 
// LIGHTS                  17      w        3     NONE  float      w
// TEXCOORD                 0   xy          4     NONE  float   xy  
// LIGHTS                   4     zw        4     NONE  float     zw
// TEXCOORD                 1   xyz         5     NONE  float   xyz 
// LIGHTS                  29      w        5     NONE  float      w
// TEXCOORD                 2   xyzw        6     NONE  float   xyz 
// LIGHTS                   0   xyzw        7     NONE  float   xyzw
// LIGHTS                   2   xyzw        8     NONE  float   xyz 
// LIGHTS                   3   xyzw        9     NONE  float   xyzw
// LIGHTS                   6   xyzw       10     NONE   uint   xy  
// LIGHTS                  10   xyzw       11     NONE   uint   xyz 
// LIGHTS                  11   xyzw       12     NONE  float   xyzw
// LIGHTS                  12   xyzw       13     NONE  float   xyzw
// LIGHTS                  14   xyzw       14     NONE  float   xyz 
// LIGHTS                  15   xyzw       15     NONE  float   xyzw
// LIGHTS                  21   xyzw       16     NONE   uint    yzw
// LIGHTS                  23   xyzw       17     NONE  float   xyzw
// LIGHTS                  24   xyzw       18     NONE  float   xyzw
// LIGHTS                  26   xyzw       19     NONE  float   xyz 
// LIGHTS                  27   xyz        20     NONE  float   xyz 
// LIGHTS                  32   xyzw       21     NONE   uint     zw
// LIGHTS                  35   xyzw       22     NONE  float   xyzw
// LIGHTS                  36   xyzw       23     NONE  float   xyzw
// LIGHTS                  38   xyzw       24     NONE  float   xyz 
// LIGHTS                  39   xyz        25     NONE  float   xyz 
// LIGHTS                  43   xyzw       26     NONE   uint   x  w
// LIGHTS                  47   xyzw       27     NONE  float   xyzw
// COUNT                    0   x          28     NONE   uint   x   
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_immediateConstantBuffer { { -1, 0, 0, 0},
                              { 0, -1, 0, 0},
                              { 0, 0, -1, 0},
                              { 0, 0, 0, -1} }
dcl_constantbuffer cb1[15], immediateIndexed
dcl_constantbuffer cb2[8], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_comparison
dcl_resource_texture2d (float,float,float,float) t11
dcl_resource_texture2d (float,float,float,float) t15
dcl_resource_texture2d (float,float,float,float) t16
dcl_resource_texture2d (float,float,float,float) t17
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t19
dcl_resource_texture2d (float,float,float,float) t20
dcl_resource_texture2d (float,float,float,float) t21
dcl_input_ps linear v1.xyz
dcl_input_ps linear v1.w
dcl_input_ps linear v2.xyz
dcl_input_ps linear v2.w
dcl_input_ps linear v3.xyz
dcl_input_ps linear v3.w
dcl_input_ps linear v4.xy
dcl_input_ps linear v4.zw
dcl_input_ps linear v5.xyz
dcl_input_ps linear v5.w
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyzw
dcl_input_ps linear v8.xyz
dcl_input_ps linear v9.xyzw
dcl_input_ps constant v10.xy
dcl_input_ps constant v11.xyz
dcl_input_ps linear v12.xyzw
dcl_input_ps linear v13.xyzw
dcl_input_ps linear v14.xyz
dcl_input_ps linear v15.xyzw
dcl_input_ps constant v16.yzw
dcl_input_ps linear v17.xyzw
dcl_input_ps linear v18.xyzw
dcl_input_ps linear v19.xyz
dcl_input_ps linear v20.xyz
dcl_input_ps constant v21.zw
dcl_input_ps linear v22.xyzw
dcl_input_ps linear v23.xyzw
dcl_input_ps linear v24.xyz
dcl_input_ps linear v25.xyz
dcl_input_ps constant v26.xw
dcl_input_ps linear v27.xyzw
dcl_input_ps constant v28.x
dcl_output o0.xyzw
dcl_temps 15

#line 466 "\\?\C:\Projects\Vektoria_2016-06-20\Work\VektoriaApp\Shaders\Source\shaders_Standard.hlsl"
mov r0.xyz, -v5.xyzx
add r0.xyz, r0.xyzx, v6.xyzx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx  // f3EyeVector<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 469
ult r0.w, l(1), cb1[14].z
ult r1.x, l(1), cb1[14].w
or r0.w, r0.w, r1.x
if_nz r0.w

#line 473
  utof r0.w, cb1[14].x  // fxPic<0:[0f,4.29497e+009f]>
  utof r1.x, cb1[14].y  // fyPic<0:[0f,4.29497e+009f]>
  utof r1.y, cb1[14].z  // fxPics<0:[0f,4.29497e+009f]>
  utof r1.z, cb1[14].w  // fyPics<0:[0f,4.29497e+009f]>
  div r0.w, r0.w, r1.y
  div r1.y, l(1.000000), r1.y
  mul r1.y, r1.y, v4.x
  add r2.x, r0.w, r1.y  // input<13:NaN:Inf>
  div r0.w, r1.x, r1.z
  div r1.x, l(1.000000), r1.z
  mul r1.x, r1.x, v4.y
  add r2.y, r0.w, r1.x  // input<14:NaN:Inf>

#line 469
else 
  mov r2.xy, v4.xyxx  // input<13,14>
endif 

#line 481
ieq r0.w, cb1[13].x, l(1)
if_nz r0.w
  mul r1.xyz, v1.yzxy, v2.zxyz
  mul r3.xyz, v1.zxyz, v2.yzxy
  mov r3.xyz, -r3.xyzx
  add r1.xyz, r1.xyzx, r3.xyzx
  mov r1.xyz, -r1.xyzx  // f3B<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 486
  dp3 r3.x, r0.xyzx, v2.xyzx  // f3ViewDirTS<0:NaN:Inf>
  dp3 r3.y, r0.xyzx, r1.xyzx  // f3ViewDirTS<1:NaN:Inf>
  dp3 r0.w, r0.xyzx, v1.xyzx  // f3ViewDirTS<2:NaN:Inf>
  mov r1.xy, -r3.xyxx
  mul r1.xy, r1.xyxx, l(0.020000, 0.020000, 0.000000, 0.000000)
  mul r1.xy, r1.xyxx, cb1[4].yyyy
  div r1.xy, r1.xyxx, r0.wwww  // f2MaxParallaxOffset<0:NaN:Inf,1:NaN:Inf>
  dp3 r0.w, r0.xyzx, v1.xyzx
  mul r0.w, r0.w, l(-15.000000)
  add r0.w, r0.w, l(20.000000)
  ftoi r0.w, r0.w  // iSampleCount<0>
  itof r1.z, r0.w
  div r1.z, l(1.000000), r1.z  // fZStep<0:Inf>
  mul r1.xy, r1.zzzz, r1.xyxx  // f2TexStep<0:NaN:Inf,1:NaN:Inf>
  deriv_rtx_coarse r2.zw, r2.xxxy  // f2Dx<0:NaN:Inf,1:NaN:Inf>
  deriv_rty_coarse r3.xy, r2.xyxx  // f2Dy<0:NaN:Inf,1:NaN:Inf>

#line 498
  mov r1.w, l(0)  // iSampleIdx<0: 0>
  mov r3.zw, l(0,0,0,0)  // f2CurTexOffset<0: -0f,1: -0f>

#line 502
  mov r1.z, -r1.z
  add r4.x, r1.z, l(1.000000)  // fCurRayZ<0:Inf>
  mov r4.y, l(1.000000)  // fPrevRayZ<0: 1f>

#line 510
  mov r4.zw, r3.zzzw  // f2CurTexOffset<0:NaN:Inf,1:NaN:Inf>
  mov r5.xy, r3.zwzz  // f2PrevTexOffset<0:NaN:Inf,1:NaN:Inf>
  mov r5.zw, r3.zzzw  // f2FinalTexOffset<0:NaN:Inf,1:NaN:Inf>
  mov r6.x, r1.w  // iSampleIdx<0>
  mov r6.y, r4.x  // fCurRayZ<0:NaN:Inf>
  mov r6.z, r4.y  // fPrevRayZ<0:NaN:Inf>
  mov r6.w, r1.w  // fPrevHeight<0:NaN:Inf>
  loop 
    ige r7.x, r0.w, r6.x
    breakc_z r7.x
    add r7.xy, r2.xyxx, r4.zwzz
    sample_d_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t20.xyzw, s0, r2.zwzz, r3.xyxx
    mov r7.x, r7.x  // fCurHeight<0:Inf>
    add r7.x, r6.w, r7.x
    mul r7.x, r7.x, l(0.500000)  // fCurHeight<0:NaN:Inf>
    lt r7.y, r6.y, r7.x
    if_nz r7.y
      mov r7.y, -r6.z
      add r7.z, r6.w, r7.y
      mov r7.w, -r7.x
      add r7.w, r6.w, r7.w
      add r7.w, r6.y, r7.w
      add r7.y, r7.y, r7.w
      div r7.y, r7.z, r7.y  // fT<0:NaN:Inf>
      mul r7.yz, r1.xxyx, r7.yyyy
      add r5.zw, r5.xxxy, r7.yyyz  // f2FinalTexOffset<0:NaN:Inf,1:NaN:Inf>
      iadd r6.x, r0.w, l(1)  // iSampleIdx<0>

#line 514
    else 

#line 523
      iadd r6.x, r6.x, l(1)  // iSampleIdx<0>
      mov r5.xy, r4.zwzz  // f2PrevTexOffset<0:NaN:Inf,1:NaN:Inf>
      mov r6.z, r6.y  // fPrevRayZ<0:NaN:Inf>
      mov r6.w, r7.x  // fPrevHeight<0:NaN:Inf>
      add r4.zw, r1.xxxy, r4.zzzw  // f2CurTexOffset<0:NaN:Inf,1:NaN:Inf>
      add r6.y, r1.z, r6.y  // fCurRayZ<0:NaN:Inf>

#line 514
    endif 

#line 510
  endloop 

#line 532
  add r2.xy, r2.xyxx, r5.zwzz  // input<13:NaN:Inf,14:NaN:Inf>

#line 481
endif 

#line 536
ine r0.w, l(0, 0, 0, 0), cb1[9].w
if_nz r0.w
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r2.xyxx, t18.xyzw, s0
  mul r1.xyz, r1.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
  add r1.xyz, r1.xyzx, l(-1.000000, -1.000000, -1.000000, 0.000000)  // f3BumpNormal<0:Inf,1:Inf,2:Inf>
  mul r1.xy, r1.xyxx, cb1[4].xxxx  // f3BumpNormal<0:NaN:Inf,1:NaN:Inf>
  mul r3.xyz, r1.xxxx, v2.xyzx
  mul r1.xyw, r1.yyyy, v3.xyxz
  add r1.xyw, r1.xyxw, r3.xyxz
  mul r3.xyz, r1.zzzz, v1.xyzx
  add r1.xyz, r1.xywx, r3.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
  dp3 r0.w, r1.xyzx, r1.xyzx
  rsq r0.w, r0.w
  mul r1.xyz, r0.wwww, r1.xyzx  // input<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>

#line 536
else 
  mov r1.xyz, v1.xyzx  // input<4,5,6>
endif 

#line 556
ult r0.w, v28.x, l(1)
if_nz r0.w
  mov r0.w, l(1)  // input<110: 1u>
else 
  mov r0.w, v28.x  // input<110:[1u,4294967295u]>
endif 

#line 559
if_nz r0.w

#line 563
  mov r3.xyz, -v7.yzwy
  dp3 r1.w, r3.xyzx, r1.xyzx
  max r1.w, r1.w, l(0.000000)
  min r1.w, r1.w, l(1.000000)  // fShadingThisLight<0:[0f,1f]>
  add r3.w, r1.w, l(0.000000)  // fShading<0:NaN>
  ieq r2.z, v11.x, l(3)
  if_nz r2.z

#line 571
    dp3 r2.z, v7.yzwy, v9.xyzx  // fCosCurAngle<0:NaN:Inf>
    lt r2.w, v1.w, r2.z
    if_nz r2.w
      lt r2.w, r2.z, v4.z
      if_nz r2.w
        mov r2.w, -v1.w
        add r2.z, r2.w, r2.z
        add r2.w, r2.w, v4.z
        div r2.z, r2.z, r2.w  // frFallOff<0:NaN:Inf>
      else 
        mov r2.z, l(1.000000)  // frFallOff<0: 1f>
      endif 

#line 581
      if_nz v10.x

#line 584
        div r4.xyz, v12.xyzx, v12.wwww  // input<40:NaN:Inf,41:NaN:Inf,42:NaN:Inf>

#line 587
        mul r2.w, r4.x, l(0.500000)
        add r2.w, r2.w, l(0.500000)  // input<40:NaN:Inf>
        mul r4.w, r4.y, l(-0.500000)
        add r4.w, r4.w, l(0.500000)  // input<41:NaN:Inf>
        if_nz v10.y

#line 592
          resinfo_indexable(texture2d)(float,float,float,float) r5.xy, l(0), t11.xyzw  // fWidth<0:Inf>, fHeight<0:Inf>
          div r5.x, l(1.316130), r5.x  // fWidthInv<0:Inf>
          div r5.y, l(1.316130), r5.y  // fHeightInv<0:Inf>

#line 602
          mul r5.z, r5.x, l(-2.000000)
          add r6.x, r2.w, r5.z  // f2<0:NaN:Inf>
          mul r5.w, r5.y, l(-2.000000)
          add r6.y, r4.w, r5.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r6.xyxx, t11.xxxx, s2, r4.z
          mul r6.x, r6.x, l(0.003663)
          add r6.x, r6.x, l(0.000000)  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r5.z  // f2<0:NaN:Inf>
          mul r6.y, r5.y, l(2.000000)
          add r7.y, r4.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.z, r7.xyxx, t11.xxxx, s2, r4.z
          mul r6.z, r6.z, l(0.003663)
          add r6.x, r6.z, r6.x  // frShadowFactor<0:NaN>

#line 602
          mul r6.z, r5.x, l(2.000000)
          add r7.x, r2.w, r6.z  // f2<0:NaN:Inf>
          add r7.y, r4.w, r5.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r4.z
          mul r6.w, r6.w, l(0.003663)
          add r6.x, r6.w, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r6.z  // f2<0:NaN:Inf>
          add r7.y, r4.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r4.z
          mul r6.w, r6.w, l(0.003663)
          add r6.x, r6.w, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r5.z  // f2<0:NaN:Inf>
          add r7.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r4.z
          mul r6.w, r6.w, l(0.025641)
          add r6.x, r6.w, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r6.z  // f2<0:NaN:Inf>
          add r7.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r4.z
          mul r6.w, r6.w, l(0.025641)
          add r6.x, r6.w, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, l(0.000000)  // f2<0:NaN:Inf>
          add r7.y, r4.w, r5.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r4.z
          mul r6.w, r6.w, l(0.025641)
          add r6.x, r6.w, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, l(0.000000)  // f2<0:NaN:Inf>
          add r7.y, r4.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r4.z
          mul r6.w, r6.w, l(0.025641)
          add r6.x, r6.w, r6.x  // frShadowFactor<0:NaN>

#line 602
          mul r6.w, r5.x, l(-1.000000)
          add r7.x, r2.w, r6.w  // f2<0:NaN:Inf>
          add r7.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.095238)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          mul r5.x, r5.x, l(1.000000)
          add r7.x, r2.w, r5.x  // f2<0:NaN:Inf>
          add r7.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.095238)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, l(0.000000)  // f2<0:NaN:Inf>
          mul r7.z, r5.y, l(-1.000000)
          add r7.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.095238)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, l(0.000000)  // f2<0:NaN:Inf>
          mul r5.y, r5.y, l(1.000000)
          add r7.y, r4.w, r5.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.095238)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r6.w  // f2<0:NaN:Inf>
          add r7.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.058608)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r5.x  // f2<0:NaN:Inf>
          add r7.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.058608)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r6.w  // f2<0:NaN:Inf>
          add r7.y, r4.w, r5.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.058608)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r5.x  // f2<0:NaN:Inf>
          add r7.y, r4.w, r5.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.058608)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r5.z  // f2<0:NaN:Inf>
          add r7.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.014652)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r6.z  // f2<0:NaN:Inf>
          add r7.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r7.x, r7.x, l(0.014652)
          add r6.x, r6.x, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r5.z  // f2<0:NaN:Inf>
          add r7.y, r4.w, r5.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.xyxx, t11.xxxx, s2, r4.z
          mul r5.z, r5.z, l(0.014652)
          add r5.z, r5.z, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r6.z  // f2<0:NaN:Inf>
          add r7.y, r4.w, r5.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r5.y, r7.xyxx, t11.xxxx, s2, r4.z
          mul r5.y, r5.y, l(0.014652)
          add r5.y, r5.y, r5.z  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r6.w  // f2<0:NaN:Inf>
          add r7.y, r4.w, r5.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.xyxx, t11.xxxx, s2, r4.z
          mul r5.z, r5.z, l(0.014652)
          add r5.y, r5.z, r5.y  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r5.x  // f2<0:NaN:Inf>
          add r7.y, r4.w, r5.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.xyxx, t11.xxxx, s2, r4.z
          mul r5.z, r5.z, l(0.014652)
          add r5.y, r5.z, r5.y  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r6.w  // f2<0:NaN:Inf>
          add r7.y, r4.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r5.z, r7.xyxx, t11.xxxx, s2, r4.z
          mul r5.z, r5.z, l(0.014652)
          add r5.y, r5.z, r5.y  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r2.w, r5.x  // f2<0:NaN:Inf>
          add r7.y, r4.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r5.x, r7.xyxx, t11.xxxx, s2, r4.z
          mul r5.x, r5.x, l(0.014652)
          add r5.x, r5.x, r5.y  // frShadowFactor<0:NaN>

#line 602
          add r6.x, r2.w, l(0.000000)  // f2<0:NaN:Inf>
          add r6.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r6.xyxx, t11.xxxx, s2, r4.z
          mul r2.w, r2.w, l(0.150183)
          add r2.w, r2.w, r5.x  // frShadowFactor<0:NaN>

#line 589
        else 

#line 609
          mul r4.xy, r4.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
          add r4.xy, r4.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          sample_c_lz_indexable(texture2d)(float,float,float,float) r2.w, r4.xyxx, t11.xxxx, s2, r4.z  // frShadowFactor<0:[0f,1f]>

#line 589
        endif 

#line 581
      else 
        mov r2.w, l(0)  // frShadowFactor<0: 0f>
      endif 

#line 573
    else 

#line 614
      mov r2.w, l(0)  // frShadowFactor<0: 0f>
      mov r2.z, l(0)  // frFallOff<0: 0f>

#line 573
    endif 

#line 567
  else 

#line 621
    mov r2.w, l(1.000000)  // frShadowFactor<0: 1f>
    mov r2.z, l(1.000000)  // frFallOff<0: 1f>

#line 567
  endif 

#line 624
  mul r1.w, r1.w, v7.x
  mul r4.xyz, r1.wwww, v8.xyzx
  mul r4.xyz, r2.wwww, r4.xyzx
  mul r4.xyz, r2.zzzz, r4.xyzx
  add r3.xyz, r4.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 559
else 
  mov r3.xyzw, l(0,0,0,0)  // f4Diffuse<0: 0f,1: 0f,2: 0f>, fShading<0: 0f>
endif 
mov r4.x, r3.x  // f4Diffuse<0:NaN:Inf>
mov r4.y, r3.y  // f4Diffuse<1:NaN:Inf>
mov r4.z, r3.z  // f4Diffuse<2:NaN:Inf>
mov r1.w, r3.w  // fShading<0:NaN>
ult r2.z, l(1), r0.w
if_nz r2.z

#line 563
  mov r5.xyz, -v13.yzwy
  dp3 r2.w, r5.xyzx, r1.xyzx
  max r2.w, r2.w, l(0.000000)
  min r2.w, r2.w, l(1.000000)  // fShadingThisLight<0:[0f,1f]>
  add r3.w, r1.w, r2.w  // fShading<0:NaN>
  ieq r1.w, v16.y, l(3)
  if_nz r1.w

#line 571
    dp3 r1.w, v13.yzwy, v15.xyzx  // fCosCurAngle<0:NaN:Inf>
    lt r4.w, v3.w, r1.w
    if_nz r4.w
      lt r4.w, r1.w, v2.w
      if_nz r4.w
        mov r4.w, -v3.w
        add r1.w, r1.w, r4.w
        add r4.w, r4.w, v2.w
        div r1.w, r1.w, r4.w  // frFallOff<0:NaN:Inf>
      else 
        mov r1.w, l(1.000000)  // frFallOff<0: 1f>
      endif 

#line 581
      if_nz v11.y

#line 584
        div r5.xyz, v17.xyzx, v17.wwww  // input<62:NaN:Inf,63:NaN:Inf,64:NaN:Inf>

#line 587
        mul r4.w, r5.x, l(0.500000)
        add r4.w, r4.w, l(0.500000)  // input<62:NaN:Inf>
        mul r5.w, r5.y, l(-0.500000)
        add r5.w, r5.w, l(0.500000)  // input<63:NaN:Inf>
        if_nz v11.z

#line 592
          resinfo_indexable(texture2d)(float,float,float,float) r6.xy, l(0), t11.xyzw  // fWidth<0:Inf>, fHeight<0:Inf>
          div r6.x, l(1.316130), r6.x  // fWidthInv<0:Inf>
          div r6.y, l(1.316130), r6.y  // fHeightInv<0:Inf>

#line 602
          mul r6.z, r6.x, l(-2.000000)
          add r7.x, r4.w, r6.z  // f2<0:NaN:Inf>
          mul r6.w, r6.y, l(-2.000000)
          add r7.y, r5.w, r6.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r5.z
          mul r7.x, r7.x, l(0.003663)
          add r7.x, r7.x, l(0.000000)  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r6.z  // f2<0:NaN:Inf>
          mul r7.y, r6.y, l(2.000000)
          add r8.y, r5.w, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.z, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.z, r7.z, l(0.003663)
          add r7.x, r7.z, r7.x  // frShadowFactor<0:NaN>

#line 602
          mul r7.z, r6.x, l(2.000000)
          add r8.x, r4.w, r7.z  // f2<0:NaN:Inf>
          add r8.y, r5.w, r6.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.003663)
          add r7.x, r7.w, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r7.z  // f2<0:NaN:Inf>
          add r8.y, r5.w, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.003663)
          add r7.x, r7.w, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r6.z  // f2<0:NaN:Inf>
          add r8.y, r5.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.025641)
          add r7.x, r7.w, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r7.z  // f2<0:NaN:Inf>
          add r8.y, r5.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.025641)
          add r7.x, r7.w, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, l(0.000000)  // f2<0:NaN:Inf>
          add r8.y, r5.w, r6.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.025641)
          add r7.x, r7.w, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, l(0.000000)  // f2<0:NaN:Inf>
          add r8.y, r5.w, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.025641)
          add r7.x, r7.w, r7.x  // frShadowFactor<0:NaN>

#line 602
          mul r7.w, r6.x, l(-1.000000)
          add r8.x, r4.w, r7.w  // f2<0:NaN:Inf>
          add r8.y, r5.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.095238)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          mul r6.x, r6.x, l(1.000000)
          add r8.x, r4.w, r6.x  // f2<0:NaN:Inf>
          add r8.y, r5.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.095238)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, l(0.000000)  // f2<0:NaN:Inf>
          mul r8.z, r6.y, l(-1.000000)
          add r8.y, r5.w, r8.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.095238)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, l(0.000000)  // f2<0:NaN:Inf>
          mul r6.y, r6.y, l(1.000000)
          add r8.y, r5.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.095238)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r7.w  // f2<0:NaN:Inf>
          add r8.y, r5.w, r8.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.058608)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r6.x  // f2<0:NaN:Inf>
          add r8.y, r5.w, r8.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.058608)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r7.w  // f2<0:NaN:Inf>
          add r8.y, r5.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.058608)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r6.x  // f2<0:NaN:Inf>
          add r8.y, r5.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.058608)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r6.z  // f2<0:NaN:Inf>
          add r8.y, r5.w, r8.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.014652)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r7.z  // f2<0:NaN:Inf>
          add r8.y, r5.w, r8.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.014652)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r6.z  // f2<0:NaN:Inf>
          add r8.y, r5.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.z, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.z, r6.z, l(0.014652)
          add r6.z, r6.z, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r7.z  // f2<0:NaN:Inf>
          add r8.y, r5.w, r6.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.y, r6.y, l(0.014652)
          add r6.y, r6.y, r6.z  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r7.w  // f2<0:NaN:Inf>
          add r8.y, r5.w, r6.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.z, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.z, r6.z, l(0.014652)
          add r6.y, r6.z, r6.y  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r6.x  // f2<0:NaN:Inf>
          add r8.y, r5.w, r6.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.z, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.z, r6.z, l(0.014652)
          add r6.y, r6.z, r6.y  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r7.w  // f2<0:NaN:Inf>
          add r8.y, r5.w, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.z, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.z, r6.z, l(0.014652)
          add r6.y, r6.z, r6.y  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.w, r6.x  // f2<0:NaN:Inf>
          add r8.y, r5.w, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.x, r6.x, l(0.014652)
          add r6.x, r6.x, r6.y  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r4.w, l(0.000000)  // f2<0:NaN:Inf>
          add r7.y, r5.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r7.xyxx, t11.xxxx, s2, r5.z
          mul r4.w, r4.w, l(0.150183)
          add r4.w, r4.w, r6.x  // frShadowFactor<0:NaN>

#line 589
        else 

#line 609
          mul r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
          add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          sample_c_lz_indexable(texture2d)(float,float,float,float) r4.w, r5.xyxx, t11.xxxx, s2, r5.z  // frShadowFactor<0:[0f,1f]>

#line 589
        endif 

#line 581
      else 
        mov r4.w, l(0)  // frShadowFactor<0: 0f>
      endif 

#line 573
    else 

#line 614
      mov r4.w, l(0)  // frShadowFactor<0: 0f>
      mov r1.w, l(0)  // frFallOff<0: 0f>

#line 573
    endif 

#line 567
  else 

#line 621
    mov r4.w, l(1.000000)  // frShadowFactor<0: 1f>
    mov r1.w, l(1.000000)  // frFallOff<0: 1f>

#line 567
  endif 

#line 624
  mul r2.w, r2.w, v13.x
  mul r5.xyz, r2.wwww, v14.xyzx
  mul r5.xyz, r4.wwww, r5.xyzx
  mul r5.xyz, r1.wwww, r5.xyzx
  add r3.xyz, r4.xyzx, r5.xyzx  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 559
endif 
mov r4.x, r3.x  // f4Diffuse<0:NaN:Inf>
mov r4.y, r3.y  // f4Diffuse<1:NaN:Inf>
mov r4.z, r3.z  // f4Diffuse<2:NaN:Inf>
mov r1.w, r3.w  // fShading<0:NaN>
ult r2.w, l(2), r0.w
if_nz r2.w

#line 563
  mov r5.xyz, -v18.yzwy
  dp3 r4.w, r5.xyzx, r1.xyzx
  max r4.w, r4.w, l(0.000000)
  min r4.w, r4.w, l(1.000000)  // fShadingThisLight<0:[0f,1f]>
  add r3.w, r1.w, r4.w  // fShading<0:NaN>
  ieq r1.w, v21.z, l(3)
  if_nz r1.w

#line 571
    dp3 r1.w, v18.yzwy, v20.xyzx  // fCosCurAngle<0:NaN:Inf>
    lt r5.x, v5.w, r1.w
    if_nz r5.x
      lt r5.x, r1.w, v4.w
      if_nz r5.x
        mov r5.x, -v5.w
        add r1.w, r1.w, r5.x
        add r5.x, r5.x, v4.w
        div r1.w, r1.w, r5.x  // frFallOff<0:NaN:Inf>
      else 
        mov r1.w, l(1.000000)  // frFallOff<0: 1f>
      endif 

#line 581
      if_nz v16.z

#line 584
        div r5.xyz, v22.xyzx, v22.wwww  // input<84:NaN:Inf,85:NaN:Inf,86:NaN:Inf>

#line 587
        mul r5.w, r5.x, l(0.500000)
        add r5.w, r5.w, l(0.500000)  // input<84:NaN:Inf>
        mul r6.x, r5.y, l(-0.500000)
        add r6.x, r6.x, l(0.500000)  // input<85:NaN:Inf>
        if_nz v16.w

#line 592
          resinfo_indexable(texture2d)(float,float,float,float) r6.yz, l(0), t11.zxyw  // fWidth<0:Inf>, fHeight<0:Inf>
          div r6.y, l(1.316130), r6.y  // fWidthInv<0:Inf>
          div r6.z, l(1.316130), r6.z  // fHeightInv<0:Inf>

#line 602
          mul r6.w, r6.y, l(-2.000000)
          add r7.x, r5.w, r6.w  // f2<0:NaN:Inf>
          mul r7.z, r6.z, l(-2.000000)
          add r7.y, r6.x, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r5.z
          mul r7.x, r7.x, l(0.003663)
          add r7.x, r7.x, l(0.000000)  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r5.w, r6.w  // f2<0:NaN:Inf>
          mul r7.y, r6.z, l(2.000000)
          add r8.y, r6.x, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.003663)
          add r7.x, r7.w, r7.x  // frShadowFactor<0:NaN>

#line 602
          mul r7.w, r6.y, l(2.000000)
          add r8.x, r5.w, r7.w  // f2<0:NaN:Inf>
          add r8.y, r6.x, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.003663)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r5.w, r7.w  // f2<0:NaN:Inf>
          add r8.y, r6.x, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.003663)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r5.w, r6.w  // f2<0:NaN:Inf>
          add r8.y, r6.x, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.025641)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r5.w, r7.w  // f2<0:NaN:Inf>
          add r8.y, r6.x, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.025641)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r5.w, l(0.000000)  // f2<0:NaN:Inf>
          add r8.y, r6.x, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.025641)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r5.w, l(0.000000)  // f2<0:NaN:Inf>
          add r8.y, r6.x, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.025641)
          add r7.x, r7.x, r8.x  // frShadowFactor<0:NaN>

#line 602
          mul r8.x, r6.y, l(-1.000000)
          add r9.x, r5.w, r8.x  // f2<0:NaN:Inf>
          add r9.y, r6.x, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.y, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.y, r8.y, l(0.095238)
          add r7.x, r7.x, r8.y  // frShadowFactor<0:NaN>

#line 602
          mul r6.y, r6.y, l(1.000000)
          add r9.x, r5.w, r6.y  // f2<0:NaN:Inf>
          add r9.y, r6.x, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.y, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.y, r8.y, l(0.095238)
          add r7.x, r7.x, r8.y  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, l(0.000000)  // f2<0:NaN:Inf>
          mul r8.y, r6.z, l(-1.000000)
          add r9.y, r6.x, r8.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.z, r8.z, l(0.095238)
          add r7.x, r7.x, r8.z  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, l(0.000000)  // f2<0:NaN:Inf>
          mul r6.z, r6.z, l(1.000000)
          add r9.y, r6.z, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.z, r8.z, l(0.095238)
          add r7.x, r7.x, r8.z  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r8.x  // f2<0:NaN:Inf>
          add r9.y, r6.x, r8.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.z, r8.z, l(0.058608)
          add r7.x, r7.x, r8.z  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r6.y  // f2<0:NaN:Inf>
          add r9.y, r6.x, r8.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.z, r8.z, l(0.058608)
          add r7.x, r7.x, r8.z  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r8.x  // f2<0:NaN:Inf>
          add r9.y, r6.z, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.z, r8.z, l(0.058608)
          add r7.x, r7.x, r8.z  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r6.y  // f2<0:NaN:Inf>
          add r9.y, r6.z, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.z, r8.z, l(0.058608)
          add r7.x, r7.x, r8.z  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r6.w  // f2<0:NaN:Inf>
          add r9.y, r6.x, r8.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.z, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.z, r8.z, l(0.014652)
          add r7.x, r7.x, r8.z  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r7.w  // f2<0:NaN:Inf>
          add r9.y, r6.x, r8.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.y, r9.xyxx, t11.xxxx, s2, r5.z
          mul r8.y, r8.y, l(0.014652)
          add r7.x, r7.x, r8.y  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r6.w  // f2<0:NaN:Inf>
          add r9.y, r6.z, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r9.xyxx, t11.xxxx, s2, r5.z
          mul r6.w, r6.w, l(0.014652)
          add r6.w, r6.w, r7.x  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r7.w  // f2<0:NaN:Inf>
          add r9.y, r6.z, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.z, r9.xyxx, t11.xxxx, s2, r5.z
          mul r6.z, r6.z, l(0.014652)
          add r6.z, r6.z, r6.w  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r8.x  // f2<0:NaN:Inf>
          add r9.y, r6.x, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r9.xyxx, t11.xxxx, s2, r5.z
          mul r6.w, r6.w, l(0.014652)
          add r6.z, r6.w, r6.z  // frShadowFactor<0:NaN>

#line 602
          add r9.x, r5.w, r6.y  // f2<0:NaN:Inf>
          add r9.y, r6.x, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r9.xyxx, t11.xxxx, s2, r5.z
          mul r6.w, r6.w, l(0.014652)
          add r6.z, r6.w, r6.z  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r5.w, r8.x  // f2<0:NaN:Inf>
          add r8.y, r6.x, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.w, r6.w, l(0.014652)
          add r6.z, r6.w, r6.z  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r5.w, r6.y  // f2<0:NaN:Inf>
          add r8.y, r6.x, r7.y  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.y, r6.y, l(0.014652)
          add r6.y, r6.y, r6.z  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r5.w, l(0.000000)  // f2<0:NaN:Inf>
          add r7.y, r6.x, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r5.w, r7.xyxx, t11.xxxx, s2, r5.z
          mul r5.w, r5.w, l(0.150183)
          add r5.w, r5.w, r6.y  // frShadowFactor<0:NaN>

#line 589
        else 

#line 609
          mul r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
          add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          sample_c_lz_indexable(texture2d)(float,float,float,float) r5.w, r5.xyxx, t11.xxxx, s2, r5.z  // frShadowFactor<0:[0f,1f]>

#line 589
        endif 

#line 581
      else 
        mov r5.w, l(0)  // frShadowFactor<0: 0f>
      endif 

#line 573
    else 

#line 614
      mov r5.w, l(0)  // frShadowFactor<0: 0f>
      mov r1.w, l(0)  // frFallOff<0: 0f>

#line 573
    endif 

#line 567
  else 

#line 621
    mov r5.w, l(1.000000)  // frShadowFactor<0: 1f>
    mov r1.w, l(1.000000)  // frFallOff<0: 1f>

#line 567
  endif 

#line 624
  mul r4.w, r4.w, v18.x
  mul r5.xyz, r4.wwww, v19.xyzx
  mul r5.xyz, r5.wwww, r5.xyzx
  mul r5.xyz, r1.wwww, r5.xyzx
  add r3.xyz, r4.xyzx, r5.xyzx  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 559
endif 
mov r1.w, r3.w  // fShading<0:NaN>
ult r4.x, l(3), r0.w
if_nz r4.x

#line 563
  mov r4.yzw, -v23.yyzw
  dp3 r4.y, r4.yzwy, r1.xyzx
  max r4.y, r4.y, l(0.000000)
  min r4.y, r4.y, l(1.000000)  // fShadingThisLight<0:[0f,1f]>
  add r3.w, r1.w, r4.y  // fShading<0:NaN>
  ieq r1.w, v26.w, l(3)
  if_nz r1.w

#line 571
    dp3 r1.w, v23.yzwy, v25.xyzx  // fCosCurAngle<0:NaN:Inf>
    lt r4.z, v15.w, r1.w
    if_nz r4.z
      lt r4.z, r1.w, v9.w
      if_nz r4.z
        mov r4.z, -v15.w
        add r1.w, r1.w, r4.z
        add r4.z, r4.z, v9.w
        div r1.w, r1.w, r4.z  // frFallOff<0:NaN:Inf>
      else 
        mov r1.w, l(1.000000)  // frFallOff<0: 1f>
      endif 

#line 581
      if_nz v21.w

#line 584
        div r5.xyz, v27.xyzx, v27.wwww  // input<106:NaN:Inf,107:NaN:Inf,108:NaN:Inf>

#line 587
        mul r4.z, r5.x, l(0.500000)
        add r4.z, r4.z, l(0.500000)  // input<106:NaN:Inf>
        mul r4.w, r5.y, l(-0.500000)
        add r4.w, r4.w, l(0.500000)  // input<107:NaN:Inf>
        if_nz v26.x

#line 592
          resinfo_indexable(texture2d)(float,float,float,float) r6.xy, l(0), t11.xyzw  // fWidth<0:Inf>, fHeight<0:Inf>
          div r5.w, l(1.316130), r6.x  // fWidthInv<0:Inf>
          div r6.x, l(1.316130), r6.y  // fHeightInv<0:Inf>

#line 602
          mul r6.y, r5.w, l(-2.000000)
          add r7.x, r4.z, r6.y  // f2<0:NaN:Inf>
          mul r6.z, r6.x, l(-2.000000)
          add r7.y, r4.w, r6.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.w, r7.xyxx, t11.xxxx, s2, r5.z
          mul r6.w, r6.w, l(0.003663)
          add r6.w, r6.w, l(0.000000)  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r4.z, r6.y  // f2<0:NaN:Inf>
          mul r7.z, r6.x, l(2.000000)
          add r7.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.x, r7.xyxx, t11.xxxx, s2, r5.z
          mul r7.x, r7.x, l(0.003663)
          add r6.w, r6.w, r7.x  // frShadowFactor<0:NaN>

#line 602
          mul r7.x, r5.w, l(2.000000)
          add r8.x, r4.z, r7.x  // f2<0:NaN:Inf>
          add r8.y, r4.w, r6.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.y, r7.y, l(0.003663)
          add r6.w, r6.w, r7.y  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r7.x  // f2<0:NaN:Inf>
          add r8.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.y, r7.y, l(0.003663)
          add r6.w, r6.w, r7.y  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r6.y  // f2<0:NaN:Inf>
          add r8.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.y, r7.y, l(0.025641)
          add r6.w, r6.w, r7.y  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r7.x  // f2<0:NaN:Inf>
          add r8.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.y, r7.y, l(0.025641)
          add r6.w, r6.w, r7.y  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, l(0.000000)  // f2<0:NaN:Inf>
          add r8.y, r4.w, r6.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.y, r7.y, l(0.025641)
          add r6.w, r6.w, r7.y  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, l(0.000000)  // f2<0:NaN:Inf>
          add r8.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.y, r7.y, l(0.025641)
          add r6.w, r6.w, r7.y  // frShadowFactor<0:NaN>

#line 602
          mul r7.y, r5.w, l(-1.000000)
          add r8.x, r4.z, r7.y  // f2<0:NaN:Inf>
          add r8.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.095238)
          add r6.w, r6.w, r7.w  // frShadowFactor<0:NaN>

#line 602
          mul r5.w, r5.w, l(1.000000)
          add r8.x, r4.z, r5.w  // f2<0:NaN:Inf>
          add r8.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.095238)
          add r6.w, r6.w, r7.w  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, l(0.000000)  // f2<0:NaN:Inf>
          mul r7.w, r6.x, l(-1.000000)
          add r8.y, r4.w, r7.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.095238)
          add r6.w, r6.w, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, l(0.000000)  // f2<0:NaN:Inf>
          mul r6.x, r6.x, l(1.000000)
          add r8.y, r4.w, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.095238)
          add r6.w, r6.w, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r7.y  // f2<0:NaN:Inf>
          add r8.y, r4.w, r7.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.058608)
          add r6.w, r6.w, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r5.w  // f2<0:NaN:Inf>
          add r8.y, r4.w, r7.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.058608)
          add r6.w, r6.w, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r7.y  // f2<0:NaN:Inf>
          add r8.y, r4.w, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.058608)
          add r6.w, r6.w, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r5.w  // f2<0:NaN:Inf>
          add r8.y, r4.w, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.058608)
          add r6.w, r6.w, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r6.y  // f2<0:NaN:Inf>
          add r8.y, r4.w, r7.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r8.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r8.x, r8.x, l(0.014652)
          add r6.w, r6.w, r8.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r7.x  // f2<0:NaN:Inf>
          add r8.y, r4.w, r7.w  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r7.w, r8.xyxx, t11.xxxx, s2, r5.z
          mul r7.w, r7.w, l(0.014652)
          add r6.w, r6.w, r7.w  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r6.y  // f2<0:NaN:Inf>
          add r8.y, r4.w, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.y, r6.y, l(0.014652)
          add r6.y, r6.y, r6.w  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r7.x  // f2<0:NaN:Inf>
          add r8.y, r4.w, r6.x  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.x, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.x, r6.x, l(0.014652)
          add r6.x, r6.x, r6.y  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r7.y  // f2<0:NaN:Inf>
          add r8.y, r4.w, r6.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.y, r6.y, l(0.014652)
          add r6.x, r6.y, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r8.x, r4.z, r5.w  // f2<0:NaN:Inf>
          add r8.y, r4.w, r6.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r8.xyxx, t11.xxxx, s2, r5.z
          mul r6.y, r6.y, l(0.014652)
          add r6.x, r6.y, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r4.z, r7.y  // f2<0:NaN:Inf>
          add r7.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r6.y, r7.xyxx, t11.xxxx, s2, r5.z
          mul r6.y, r6.y, l(0.014652)
          add r6.x, r6.y, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r7.x, r4.z, r5.w  // f2<0:NaN:Inf>
          add r7.y, r4.w, r7.z  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r5.w, r7.xyxx, t11.xxxx, s2, r5.z
          mul r5.w, r5.w, l(0.014652)
          add r5.w, r5.w, r6.x  // frShadowFactor<0:NaN>

#line 602
          add r6.x, r4.z, l(0.000000)  // f2<0:NaN:Inf>
          add r6.y, r4.w, l(0.000000)  // f2<1:NaN:Inf>
          sample_c_lz_indexable(texture2d)(float,float,float,float) r4.z, r6.xyxx, t11.xxxx, s2, r5.z
          mul r4.z, r4.z, l(0.150183)
          add r4.z, r4.z, r5.w  // frShadowFactor<0:NaN>

#line 589
        else 

#line 609
          mul r5.xy, r5.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
          add r5.xy, r5.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
          sample_c_lz_indexable(texture2d)(float,float,float,float) r4.z, r5.xyxx, t11.xxxx, s2, r5.z  // frShadowFactor<0:[0f,1f]>

#line 589
        endif 

#line 581
      else 
        mov r4.z, l(0)  // frShadowFactor<0: 0f>
      endif 

#line 573
    else 

#line 614
      mov r4.z, l(0)  // frShadowFactor<0: 0f>
      mov r1.w, l(0)  // frFallOff<0: 0f>

#line 573
    endif 

#line 567
  else 

#line 621
    mov r4.z, l(1.000000)  // frShadowFactor<0: 1f>
    mov r1.w, l(1.000000)  // frFallOff<0: 1f>

#line 567
  endif 

#line 624
  mul r4.y, r4.y, v23.x
  mul r5.xyz, r4.yyyy, v24.xyzx
  mul r4.yzw, r4.zzzz, r5.xxyz
  mul r4.yzw, r1.wwww, r4.yyzw
  add r3.xyz, r3.xyzx, r4.yzwy  // f4Diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 559
endif 

#line 634
ine r1.w, l(0, 0, 0, 0), cb1[9].z
if_nz r1.w

#line 644
  sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.xyxx, t15.xyzw, s0  // f4ReflectionTexture<0:Inf,1:Inf,2:Inf,3:Inf>
  sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r2.xyxx, t17.zxyw, s0  // f4ReflectionTexture<2:Inf,0:Inf,1:Inf,3:Inf>

#line 637
  if_nz r0.w
    add r4.yzw, r0.xxyz, v7.yyzw
    dp3 r1.w, r4.yzwy, r4.yzwy
    rsq r1.w, r1.w
    mul r4.yzw, r1.wwww, r4.yyzw
    mov r4.yzw, -r4.yyzw  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r1.w, r1.xyzx, r1.xyzx
    rsq r1.w, r1.w
    mul r7.xyz, r1.wwww, r1.xyzx
    dp3 r1.w, r7.xyzx, r4.yzwy
    max r1.w, r1.w, l(0.000000)
    min r1.w, r1.w, l(1.000000)
    log r1.w, r1.w
    mul r1.w, r1.w, cb1[5].x
    exp r1.w, r1.w  // fSpecular<0:NaN:Inf>
    ine r4.y, l(0, 0, 0, 0), cb1[11].z
    if_nz r4.y
      mov r4.y, l(1.000000)  // f4ReflectionTexture<0: 1f>
      mov r4.z, l(1.000000)  // f4ReflectionTexture<1: 1f>
      mov r4.w, l(1.000000)  // f4ReflectionTexture<2: 1f>
      mov r7.x, l(1.000000)  // f4ReflectionTexture<3: 1f>
    else 
      ine r4.y, l(0, 0, 0, 0), cb1[10].z
      if_nz r4.y
        mov r4.y, r5.x  // f4ReflectionTexture<0:Inf>
        mov r4.z, r5.y  // f4ReflectionTexture<1:Inf>
        mov r4.w, r5.z  // f4ReflectionTexture<2:Inf>
        mov r7.x, r5.w  // f4ReflectionTexture<3:Inf>
      else 

#line 646
        mov r4.y, r6.y  // f4ReflectionTexture<0:Inf>
        mov r4.z, r6.z  // f4ReflectionTexture<1:Inf>
        mov r4.w, r6.x  // f4ReflectionTexture<2:Inf>
        mov r7.x, r6.w  // f4ReflectionTexture<3:Inf>

#line 643
      endif 
    endif 

#line 647
    mul r7.yzw, v8.xxyz, l(0.000000, 2.000000, 2.000000, 2.000000)
    mul r7.yzw, r4.wwww, r7.yyzw
    mul r8.xyz, r3.xyzx, r1.wwww
    mul r7.yzw, r7.yyzw, r8.xxyz
    add r7.yzw, r7.yyzw, l(0.000000, 0.000000, 0.000000, 0.000000)  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 637
  else 
    mov r7.yzw, l(0,0,0,0)  // f4SpecCol<0: 0f,1: 0f,2: 0f>
  endif 
  if_nz r2.z
    add r8.xyz, r0.xyzx, v13.yzwy
    dp3 r1.w, r8.xyzx, r8.xyzx
    rsq r1.w, r1.w
    mul r8.xyz, r1.wwww, r8.xyzx
    mov r8.xyz, -r8.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r1.w, r1.xyzx, r1.xyzx
    rsq r1.w, r1.w
    mul r9.xyz, r1.wwww, r1.xyzx
    dp3 r1.w, r9.xyzx, r8.xyzx
    max r1.w, r1.w, l(0.000000)
    min r1.w, r1.w, l(1.000000)
    log r1.w, r1.w
    mul r1.w, r1.w, cb1[5].x
    exp r1.w, r1.w  // fSpecular<0:NaN:Inf>
    ine r2.z, l(0, 0, 0, 0), cb1[11].z
    if_nz r2.z
      mov r4.y, l(1.000000)  // f4ReflectionTexture<0: 1f>
      mov r4.z, l(1.000000)  // f4ReflectionTexture<1: 1f>
      mov r2.z, l(1.000000)  // f4ReflectionTexture<2: 1f>
      mov r7.x, l(1.000000)  // f4ReflectionTexture<3: 1f>
    else 
      ine r2.z, l(0, 0, 0, 0), cb1[10].z
      if_nz r2.z
        mov r4.y, r5.x  // f4ReflectionTexture<0:Inf>
        mov r4.z, r5.y  // f4ReflectionTexture<1:Inf>
        mov r2.z, r5.z  // f4ReflectionTexture<2:Inf>
        mov r7.x, r5.w  // f4ReflectionTexture<3:Inf>
      else 

#line 646
        mov r4.y, r6.y  // f4ReflectionTexture<0:Inf>
        mov r4.z, r6.z  // f4ReflectionTexture<1:Inf>
        mov r2.z, r6.x  // f4ReflectionTexture<2:Inf>
        mov r7.x, r6.w  // f4ReflectionTexture<3:Inf>

#line 643
      endif 
    endif 

#line 647
    mul r8.xyz, v14.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
    mul r8.xyz, r2.zzzz, r8.xyzx
    mul r9.xyz, r3.xyzx, r1.wwww
    mul r8.xyz, r8.xyzx, r9.xyzx
    add r7.yzw, r7.yyzw, r8.xxyz  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 637
  endif 
  if_nz r2.w
    add r8.xyz, r0.xyzx, v18.yzwy
    dp3 r1.w, r8.xyzx, r8.xyzx
    rsq r1.w, r1.w
    mul r8.xyz, r1.wwww, r8.xyzx
    mov r8.xyz, -r8.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r1.w, r1.xyzx, r1.xyzx
    rsq r1.w, r1.w
    mul r9.xyz, r1.wwww, r1.xyzx
    dp3 r1.w, r9.xyzx, r8.xyzx
    max r1.w, r1.w, l(0.000000)
    min r1.w, r1.w, l(1.000000)
    log r1.w, r1.w
    mul r1.w, r1.w, cb1[5].x
    exp r1.w, r1.w  // fSpecular<0:NaN:Inf>
    ine r2.z, l(0, 0, 0, 0), cb1[11].z
    if_nz r2.z
      mov r4.y, l(1.000000)  // f4ReflectionTexture<0: 1f>
      mov r4.z, l(1.000000)  // f4ReflectionTexture<1: 1f>
      mov r2.z, l(1.000000)  // f4ReflectionTexture<2: 1f>
      mov r7.x, l(1.000000)  // f4ReflectionTexture<3: 1f>
    else 
      ine r2.z, l(0, 0, 0, 0), cb1[10].z
      if_nz r2.z
        mov r4.y, r5.x  // f4ReflectionTexture<0:Inf>
        mov r4.z, r5.y  // f4ReflectionTexture<1:Inf>
        mov r2.z, r5.z  // f4ReflectionTexture<2:Inf>
        mov r7.x, r5.w  // f4ReflectionTexture<3:Inf>
      else 

#line 646
        mov r4.y, r6.y  // f4ReflectionTexture<0:Inf>
        mov r4.z, r6.z  // f4ReflectionTexture<1:Inf>
        mov r2.z, r6.x  // f4ReflectionTexture<2:Inf>
        mov r7.x, r6.w  // f4ReflectionTexture<3:Inf>

#line 643
      endif 
    endif 

#line 647
    mul r8.xyz, v19.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
    mul r8.xyz, r2.zzzz, r8.xyzx
    mul r9.xyz, r3.xyzx, r1.wwww
    mul r8.xyz, r8.xyzx, r9.xyzx
    add r7.yzw, r7.yyzw, r8.xxyz  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 637
  endif 
  if_nz r4.x
    add r8.xyz, r0.xyzx, v23.yzwy
    dp3 r1.w, r8.xyzx, r8.xyzx
    rsq r1.w, r1.w
    mul r8.xyz, r1.wwww, r8.xyzx
    mov r8.xyz, -r8.xyzx  // f3Half<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r1.w, r1.xyzx, r1.xyzx
    rsq r1.w, r1.w
    mul r9.xyz, r1.wwww, r1.xyzx
    dp3 r1.w, r9.xyzx, r8.xyzx
    max r1.w, r1.w, l(0.000000)
    min r1.w, r1.w, l(1.000000)
    log r1.w, r1.w
    mul r1.w, r1.w, cb1[5].x
    exp r1.w, r1.w  // fSpecular<0:NaN:Inf>
    ine r2.z, l(0, 0, 0, 0), cb1[11].z
    if_nz r2.z
      mov r4.y, l(1.000000)  // f4ReflectionTexture<0: 1f>
      mov r4.z, l(1.000000)  // f4ReflectionTexture<1: 1f>
      mov r6.x, l(1.000000)  // f4ReflectionTexture<2: 1f>
      mov r7.x, l(1.000000)  // f4ReflectionTexture<3: 1f>
    else 
      ine r2.z, l(0, 0, 0, 0), cb1[10].z
      if_nz r2.z
        mov r4.y, r5.x  // f4ReflectionTexture<0:Inf>
        mov r4.z, r5.y  // f4ReflectionTexture<1:Inf>
        mov r6.x, r5.z  // f4ReflectionTexture<2:Inf>
        mov r7.x, r5.w  // f4ReflectionTexture<3:Inf>
      else 

#line 646
        mov r4.y, r6.y  // f4ReflectionTexture<0:Inf>
        mov r4.z, r6.z  // f4ReflectionTexture<1:Inf>
        mov r7.x, r6.w  // f4ReflectionTexture<3:Inf>

#line 643
      endif 
    endif 

#line 647
    mul r5.xyz, v24.xyzx, l(2.000000, 2.000000, 2.000000, 0.000000)
    mul r5.xyz, r6.xxxx, r5.xyzx
    mul r6.xyz, r3.xyzx, r1.wwww
    mul r5.xyz, r5.xyzx, r6.xyzx
    add r7.yzw, r5.xxyz, r7.yyzw  // f4SpecCol<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 637
  endif 

#line 634
else 

#line 653
  mov r7.yzw, l(0,0,0,0)  // f4SpecCol<0: 0f,1: 0f,2: 0f>
  mov r4.y, l(0)  // f4ReflectionTexture<0: 0f>
  mov r4.z, l(0)  // f4ReflectionTexture<1: 0f>
  mov r7.x, l(1.000000)  // f4ReflectionTexture<3: 1f>

#line 634
endif 

#line 660
mov r1.w, -r3.w
add r1.w, r1.w, l(1.000000)  // fShadingInv<0:NaN>
ine r2.z, l(0, 0, 0, 0), cb1[9].y
if_nz r2.z
  ine r2.z, l(0, 0, 0, 0), cb1[10].y
  if_nz r2.z
    sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.xyxx, t15.xyzw, s0  // f4ColGlow<0:Inf,1:Inf,2:Inf,3:Inf>
  else 

#line 666
    sample_indexable(texture2d)(float,float,float,float) r5.xyzw, r2.xyxx, t16.xyzw, s0  // f4ColGlow<0:Inf,1:Inf,2:Inf,3:Inf>

#line 663
  endif 
else 

#line 669
  sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r2.xyxx, t15.xyzw, s0
  mul r5.xyzw, r6.xyzw, cb2[0].xyzw  // f4ColGlow<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 661
endif 

#line 670
mul r5.xyz, r1.wwww, r5.xyzx  // f4ColGlow<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov r6.xyz, r5.xyzx  // f4ColGlow<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
dp4 r8.x, r5.xyzw, cb1[0].xyzw
dp4 r8.y, r5.xyzw, cb1[1].xyzw
dp4 r8.z, r5.xyzw, cb1[2].xyzw
mul r5.xyz, r7.xxxx, r8.xyzx
mov r2.z, -r7.x
add r2.z, r2.z, l(1.000000)
mul r6.xyz, r2.zzzz, r6.xyzx
add r5.xyz, r5.xyzx, r6.xyzx  // f4ColGlow<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mul r5.xyz, r5.xyzx, cb1[4].zzzz  // f4ColGlow<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 675
sample_indexable(texture2d)(float,float,float,float) r6.xyzw, r2.xyxx, t15.xyzw, s0  // f4ColorOut<0:Inf,1:Inf,2:Inf,3:Inf>
ine r2.w, l(0, 0, 0, 0), cb1[12].z
if_nz r2.w

#line 682
  resinfo_indexable(texture2d)(float,float,float,float)_uint r4.xw, l(0), t15.xzwy  // iWidth<0>, iLevels<0>, iHeight<0>

#line 685
  ld_indexable(texture2d)(float,float,float,float) r8.xyz, l(0, 0, 0, 0), t15.xyzw  // f4ChromaKey<0:Inf,1:Inf,2:Inf,3:Inf>

#line 688
  utof r2.w, r4.x
  mul r2.w, r2.w, r2.x
  utof r3.w, r4.w
  mul r3.w, r2.y, r3.w
  ftoi r9.x, r2.w
  ftoi r9.y, r3.w
  mov r9.zw, l(0,0,0,0)
  ld_indexable(texture2d)(float,float,float,float) r9.xyzw, r9.xyzw, t15.xyzw  // f4Texel<0:Inf,1:Inf,2:Inf,3:Inf>
  eq r2.w, r9.x, r8.x
  eq r3.w, r9.y, r8.y
  and r2.w, r2.w, r3.w
  eq r3.w, r9.z, r8.z
  and r2.w, r2.w, r3.w
  if_nz r2.w
    mov r9.w, l(0)  // f4ColorOut<3: 0f>
    mov r9.xyz, r6.xyzx
    mov r9.xyzw, r9.xyzw  // f4ColorOut<0:Inf,1:Inf,2:Inf,3: 0f>
  else 

#line 693
    mov r9.xyzw, r9.xyzw  // f4ColorOut<0:Inf,1:Inf,2:Inf,3:Inf>

#line 690
  endif 

#line 677
else 
  mov r9.xyzw, r6.xyzw  // f4ColorOut<0:Inf,1:Inf,2:Inf,3:Inf>
endif 

#line 695
dp4 r8.x, r9.xyzw, cb1[0].xyzw
dp4 r8.y, r9.xyzw, cb1[1].xyzw
dp4 r8.z, r9.xyzw, cb1[2].xyzw
dp4 r8.w, r9.xyzw, cb1[3].xyzw
mul r8.xyzw, r7.xxxx, r8.xyzw
mul r9.xyzw, r2.zzzz, r9.xyzw
add r8.xyzw, r8.xyzw, r9.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>

#line 699
ine r2.z, l(0, 0, 0, 0), cb1[12].x
if_nz r2.z
  mul r3.xyz, r3.xyzx, r8.xyzx
  mul r5.xyz, r1.wwww, r5.xyzx
  add r8.xyz, r3.xyzx, r5.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
endif 

#line 706
mov r3.xyz, -r0.xyzx
dp3 r1.w, r3.xyzx, r1.xyzx
max r1.w, r1.w, l(0.000000)  // fEdgeInv<0:NaN:Inf>
mov r1.w, -r1.w
add r2.z, r1.w, l(1.000000)  // fEdge<0:NaN:Inf>

#line 710
mul r2.w, r2.z, r2.z
mul r2.w, r2.z, r2.w
mul r2.w, r2.z, r2.w
mul r2.z, r2.z, r2.w
mul r2.z, r2.z, cb1[6].y  // fEdgeFresnel<0:NaN:Inf>

#line 713
ine r2.w, l(0, 0, 0, 0), cb1[12].w
if_nz r2.w
  mov r2.w, cb1[12].w  // uEnvironment<0:[1u,4294967295u]>
  mov r3.x, -r4.z
  add r3.x, r3.x, l(1.000000)
  mul r3.x, r2.z, r3.x  // fCompReflectionAddOn<0:NaN:Inf>
  add r3.y, r3.x, r4.z
  min r3.y, r3.y, l(1.000000)  // fCompReflection<0:Inf:[-1.#INFf,1f]>
  mov r3.x, -r3.x
  add r3.x, r3.x, r4.y
  max r3.x, r3.x, l(0.000000)  // fCompRefraction<0:NaN:Inf>
  mov r4.z, r4.z  // fCompSpecular<0:NaN:Inf>
  mov r3.z, -r3.x
  add r3.z, r3.z, l(1.000000)
  mov r3.w, -r3.y
  add r3.z, r3.w, r3.z
  mov r3.w, -r4.z
  add r3.z, r3.w, r3.z  // fCompColor<0:NaN:Inf>
  dp3 r3.w, r0.xyzx, r1.xyzx
  add r4.x, r3.w, r3.w
  mov r4.x, -r4.x
  mul r4.xyw, r1.xyxz, r4.xxxx
  add r4.xyw, r0.xyxz, r4.xyxw  // f3Reflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  mul r5.x, r3.w, r3.w
  mul r5.y, cb1[6].z, cb1[6].z
  mov r5.x, -r5.x
  add r5.x, r5.x, l(1.000000)
  mul r5.x, r5.x, r5.y
  mov r5.x, -r5.x
  add r5.x, r5.x, l(1.000000)
  sqrt r5.y, r5.x
  mul r3.w, r3.w, cb1[6].z
  add r3.w, r5.y, r3.w
  ge r5.x, r5.x, l(0.000000)
  mul r5.yzw, r0.xxyz, cb1[6].zzzz
  mul r9.xyz, r1.xyzx, r3.wwww
  mov r9.xyz, -r9.xyzx
  add r5.yzw, r5.yyzw, r9.xxyz
  movc r5.xyz, r5.xxxx, r5.yzwy, l(0,0,0,0)  // f3Refraction<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 729
  ieq r2.w, r2.w, l(2)
  if_nz r2.w
    nop 
    mov r5.xyz, r5.xyzx  // f3<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 283
    mov r2.w, -r5.x
    max r3.w, r2.w, r5.x  // fx<0:NaN:Inf>
    mov r5.w, -r5.y
    max r6.w, r5.w, r5.y  // fy<0:NaN:Inf>
    mov r7.x, -r5.z
    max r9.x, r5.z, r7.x  // fz<0:NaN:Inf>

#line 290
    ge r9.y, r6.w, r3.w
    ge r9.z, r6.w, r9.x
    and r9.y, r9.z, r9.y
    if_nz r9.y
      lt r9.y, l(0.000000), r5.y
      if_nz r9.y

#line 298
        div r10.x, r5.x, r6.w  // f2<0:NaN:Inf>
        div r10.y, r7.x, r6.w  // f2<1:NaN:Inf>

#line 295
        mov r9.yz, l(0,0.500000,0.250000,0)  // f2Offset<0: 0.5f,1: 0.25f>

#line 292
      else 

#line 308
        div r10.x, r5.x, r6.w  // f2<0:NaN:Inf>
        div r10.y, r5.z, r6.w  // f2<1:NaN:Inf>

#line 305
        mov r9.yz, l(0,0.833333,0.250000,0)  // f2Offset<0: 0.833333f,1: 0.25f>

#line 292
      endif 
    else 

#line 313
      ge r6.w, r3.w, r6.w
      ge r9.w, r3.w, r9.x
      and r6.w, r6.w, r9.w
      if_nz r6.w
        lt r6.w, l(0.000000), r5.x
        if_nz r6.w

#line 321
          div r10.x, r5.z, r3.w  // f2<0:NaN:Inf>
          div r10.y, r5.w, r3.w  // f2<1:NaN:Inf>

#line 318
          mov r9.yz, l(0,0.833333,0.750000,0)  // f2Offset<0: 0.833333f,1: 0.75f>

#line 315
        else 

#line 331
          div r10.x, r7.x, r3.w  // f2<0:NaN:Inf>
          div r10.y, r5.w, r3.w  // f2<1:NaN:Inf>

#line 328
          mov r9.yz, l(0,0.166667,0.750000,0)  // f2Offset<0: 0.166667f,1: 0.75f>

#line 315
        endif 
      else 

#line 338
        lt r3.w, l(0.000000), r5.z
        if_nz r3.w

#line 344
          div r10.x, r2.w, r9.x  // f2<0:NaN:Inf>
          div r10.y, r5.w, r9.x  // f2<1:NaN:Inf>

#line 341
          mov r9.yz, l(0,0.166667,0.250000,0)  // f2Offset<0: 0.166667f,1: 0.25f>

#line 338
        else 

#line 353
          div r10.x, r5.x, r9.x  // f2<0:NaN:Inf>
          div r10.y, r5.w, r9.x  // f2<1:NaN:Inf>

#line 350
          mov r9.yz, l(0,0.500000,0.750000,0)  // f2Offset<0: 0.5f,1: 0.75f>

#line 338
        endif 

#line 313
      endif 

#line 290
    endif 

#line 359
    mov r2.w, -r10.x
    max r2.w, r2.w, r10.x
    mov r3.w, -r10.y
    max r3.w, r3.w, r10.y
    max r11.z, r2.w, r3.w  // f3Out<2:NaN:Inf>
    mul r12.x, r10.x, l(0.166666)  // f2<0:NaN:Inf>
    mul r12.y, r10.y, l(0.249999)  // f2<1:NaN:Inf>
    add r11.xy, r9.yzyy, r12.xyxx  // f3Out<0:NaN:Inf,1:NaN:Inf>
    mov r11.xy, r11.xyxx  // CubicMapping<0:NaN:Inf,1:NaN:Inf>
    mov r11.z, r11.z  // CubicMapping<2:NaN:Inf>

#line 731
    mov r11.xyz, r11.xyzx  // f3UVRefraction<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r4.xyw, r4.xyxw  // f3<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 283
    mov r2.w, -r4.x
    max r3.w, r2.w, r4.x  // fx<0:NaN:Inf>
    mov r5.w, -r4.y
    max r6.w, r4.y, r5.w  // fy<0:NaN:Inf>
    mov r7.x, -r4.w
    max r9.x, r4.w, r7.x  // fz<0:NaN:Inf>

#line 290
    ge r9.y, r6.w, r3.w
    ge r9.z, r6.w, r9.x
    and r9.y, r9.z, r9.y
    if_nz r9.y
      lt r9.y, l(0.000000), r4.y
      if_nz r9.y

#line 298
        div r10.x, r4.x, r6.w  // f2<0:NaN:Inf>
        div r10.y, r7.x, r6.w  // f2<1:NaN:Inf>

#line 295
        mov r9.yz, l(0,0.500000,0.250000,0)  // f2Offset<0: 0.5f,1: 0.25f>

#line 292
      else 

#line 308
        div r10.x, r4.x, r6.w  // f2<0:NaN:Inf>
        div r10.y, r4.w, r6.w  // f2<1:NaN:Inf>

#line 305
        mov r9.yz, l(0,0.833333,0.250000,0)  // f2Offset<0: 0.833333f,1: 0.25f>

#line 292
      endif 
    else 

#line 313
      ge r6.w, r3.w, r6.w
      ge r9.w, r3.w, r9.x
      and r6.w, r6.w, r9.w
      if_nz r6.w
        lt r6.w, l(0.000000), r4.x
        if_nz r6.w

#line 321
          div r10.x, r4.w, r3.w  // f2<0:NaN:Inf>
          div r10.y, r5.w, r3.w  // f2<1:NaN:Inf>

#line 318
          mov r9.yz, l(0,0.833333,0.750000,0)  // f2Offset<0: 0.833333f,1: 0.75f>

#line 315
        else 

#line 331
          div r10.x, r7.x, r3.w  // f2<0:NaN:Inf>
          div r10.y, r5.w, r3.w  // f2<1:NaN:Inf>

#line 328
          mov r9.yz, l(0,0.166667,0.750000,0)  // f2Offset<0: 0.166667f,1: 0.75f>

#line 315
        endif 
      else 

#line 338
        lt r3.w, l(0.000000), r4.w
        if_nz r3.w

#line 344
          div r10.x, r2.w, r9.x  // f2<0:NaN:Inf>
          div r10.y, r5.w, r9.x  // f2<1:NaN:Inf>

#line 341
          mov r9.yz, l(0,0.166667,0.250000,0)  // f2Offset<0: 0.166667f,1: 0.25f>

#line 338
        else 

#line 353
          div r10.x, r4.x, r9.x  // f2<0:NaN:Inf>
          div r10.y, r5.w, r9.x  // f2<1:NaN:Inf>

#line 350
          mov r9.yz, l(0,0.500000,0.750000,0)  // f2Offset<0: 0.5f,1: 0.75f>

#line 338
        endif 

#line 313
      endif 

#line 290
    endif 

#line 359
    mov r2.w, -r10.x
    max r2.w, r2.w, r10.x
    mov r3.w, -r10.y
    max r3.w, r3.w, r10.y
    max r12.z, r2.w, r3.w  // f3Out<2:NaN:Inf>
    mul r13.x, r10.x, l(0.166666)  // f2<0:NaN:Inf>
    mul r13.y, r10.y, l(0.249999)  // f2<1:NaN:Inf>
    add r12.xy, r9.yzyy, r13.xyxx  // f3Out<0:NaN:Inf,1:NaN:Inf>
    mov r12.xy, r12.xyxx  // CubicMapping<0:NaN:Inf,1:NaN:Inf>
    mov r12.z, r12.z  // CubicMapping<2:NaN:Inf>

#line 732
    mov r12.xyz, r12.xyzx  // f3UVReflection<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r11.w, r12.z
    mov r11.zw, r11.zzzw  // f3UVRefraction<2:NaN:Inf>, f3UVReflection<2:NaN:Inf>
  else 

#line 736
    nop 
    mov r5.xyz, r5.xyzx  // f3<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 375
    div r2.w, r5.x, r5.z
    mov r3.w, -r2.w
    max r3.w, r2.w, r3.w
    min r5.w, r3.w, l(1.000000)
    max r6.w, r3.w, l(1.000000)
    div r6.w, l(1.000000, 1.000000, 1.000000, 1.000000), r6.w
    mul r5.w, r5.w, r6.w
    mul r6.w, r5.w, r5.w
    mul r7.x, r6.w, l(0.020835)
    add r7.x, r7.x, l(-0.085133)
    mul r7.x, r6.w, r7.x
    add r7.x, r7.x, l(0.180141)
    mul r7.x, r6.w, r7.x
    add r7.x, r7.x, l(-0.330299)
    mul r6.w, r6.w, r7.x
    add r6.w, r6.w, l(0.999866)
    mul r5.w, r5.w, r6.w
    lt r3.w, l(1.000000), r3.w
    mul r6.w, r5.w, l(-2.000000)
    add r6.w, r6.w, l(1.570796)
    and r3.w, r3.w, r6.w
    add r3.w, r5.w, r3.w
    add r3.w, r3.w, l(0.000000)
    min r2.w, r2.w, l(1.000000)
    mov r5.w, -r2.w
    lt r2.w, r2.w, r5.w
    and r2.w, r2.w, l(-1)
    mov r5.w, -r3.w
    movc r2.w, r2.w, r5.w, r3.w  // phi<0:NaN>
    ge r3.w, r5.x, l(0.000000)
    if_nz r3.w
      lt r3.w, r5.z, l(0.000000)
      if_nz r3.w
        add r2.w, r2.w, l(3.141593)  // phi<0:NaN>
      endif 
    else 

#line 385
      lt r3.w, r5.z, l(0.000000)
      if_nz r3.w
        add r2.w, r2.w, l(3.141593)  // phi<0:NaN>
      else 

#line 390
        add r2.w, r2.w, l(6.283185)  // phi<0:NaN>

#line 385
      endif 

#line 376
    endif 

#line 394
    div r11.x, r2.w, l(6.283185)  // phi<0:NaN>
    mov r2.w, -r5.y
    max r3.w, r2.w, r5.y
    mov r5.x, -r3.w
    add r5.x, r5.x, l(1.000000)
    sqrt r5.x, r5.x
    mul r5.z, r3.w, l(-0.018729)
    add r5.z, r5.z, l(0.074261)
    mul r5.z, r3.w, r5.z
    add r5.z, r5.z, l(-0.212114)
    mul r3.w, r3.w, r5.z
    add r3.w, r3.w, l(1.570729)
    mul r3.w, r5.x, r3.w
    mul r5.x, r3.w, l(-2.000000)
    add r5.x, r5.x, l(3.141593)
    lt r2.w, r5.y, r2.w
    and r2.w, r2.w, r5.x
    add r2.w, r2.w, r3.w  // theta<0:NaN:Inf>
    div r11.y, r2.w, l(3.141593)  // theta<0:NaN:Inf>

#line 400
    mov r11.x, r11.x  // f3Out<0:NaN>
    mov r11.y, r11.y  // f3Out<1:NaN:Inf>
    lt r2.w, r11.x, l(0.010000)
    if_nz r2.w
      mov r11.z, l(1.000000)  // f3Out<2: 1f>
    else 
      mov r2.w, r11.x  // phi<0:NaN>
      lt r2.w, l(0.990000), r2.w
      if_nz r2.w
        mov r11.z, l(1.000000)  // f3Out<2: 1f>
      else 

#line 406
        mov r11.z, l(0)  // f3Out<2: 0f>

#line 403
      endif 
    endif 

#line 407
    mov r11.xy, r11.xyxx  // SphericalMapping<0:NaN,1:NaN:Inf>
    mov r11.z, r11.z  // SphericalMapping<2:NaN>

#line 736
    mov r11.xyz, r11.xyzx  // f3UVRefraction<0:NaN,1:NaN:Inf,2:NaN>
    nop 
    mov r4.xyw, r4.xyxw  // f3<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 375
    div r2.w, r4.x, r4.w
    mov r3.w, -r2.w
    max r3.w, r2.w, r3.w
    min r5.x, r3.w, l(1.000000)
    max r5.y, r3.w, l(1.000000)
    div r5.y, l(1.000000, 1.000000, 1.000000, 1.000000), r5.y
    mul r5.x, r5.y, r5.x
    mul r5.y, r5.x, r5.x
    mul r5.z, r5.y, l(0.020835)
    add r5.z, r5.z, l(-0.085133)
    mul r5.z, r5.z, r5.y
    add r5.z, r5.z, l(0.180141)
    mul r5.z, r5.z, r5.y
    add r5.z, r5.z, l(-0.330299)
    mul r5.y, r5.z, r5.y
    add r5.y, r5.y, l(0.999866)
    mul r5.x, r5.y, r5.x
    lt r3.w, l(1.000000), r3.w
    mul r5.y, r5.x, l(-2.000000)
    add r5.y, r5.y, l(1.570796)
    and r3.w, r3.w, r5.y
    add r3.w, r5.x, r3.w
    add r3.w, r3.w, l(0.000000)
    min r2.w, r2.w, l(1.000000)
    mov r5.x, -r2.w
    lt r2.w, r2.w, r5.x
    and r2.w, r2.w, l(-1)
    mov r5.x, -r3.w
    movc r2.w, r2.w, r5.x, r3.w  // phi<0:NaN>
    ge r3.w, r4.x, l(0.000000)
    if_nz r3.w
      lt r3.w, r4.w, l(0.000000)
      if_nz r3.w
        add r2.w, r2.w, l(3.141593)  // phi<0:NaN>
      endif 
    else 

#line 385
      lt r3.w, r4.w, l(0.000000)
      if_nz r3.w
        add r2.w, r2.w, l(3.141593)  // phi<0:NaN>
      else 

#line 390
        add r2.w, r2.w, l(6.283185)  // phi<0:NaN>

#line 385
      endif 

#line 376
    endif 

#line 394
    div r12.x, r2.w, l(6.283185)  // phi<0:NaN>
    mov r2.w, -r4.y
    max r3.w, r2.w, r4.y
    mov r4.x, -r3.w
    add r4.x, r4.x, l(1.000000)
    sqrt r4.x, r4.x
    mul r4.w, r3.w, l(-0.018729)
    add r4.w, r4.w, l(0.074261)
    mul r4.w, r3.w, r4.w
    add r4.w, r4.w, l(-0.212114)
    mul r3.w, r3.w, r4.w
    add r3.w, r3.w, l(1.570729)
    mul r3.w, r4.x, r3.w
    mul r4.x, r3.w, l(-2.000000)
    add r4.x, r4.x, l(3.141593)
    lt r2.w, r4.y, r2.w
    and r2.w, r2.w, r4.x
    add r2.w, r2.w, r3.w  // theta<0:NaN:Inf>
    div r12.y, r2.w, l(3.141593)  // theta<0:NaN:Inf>

#line 400
    mov r12.x, r12.x  // f3Out<0:NaN>
    mov r12.y, r12.y  // f3Out<1:NaN:Inf>
    lt r2.w, r12.x, l(0.010000)
    if_nz r2.w
      mov r12.z, l(1.000000)  // f3Out<2: 1f>
    else 
      mov r2.w, r12.x  // phi<0:NaN>
      lt r2.w, l(0.990000), r2.w
      if_nz r2.w
        mov r12.z, l(1.000000)  // f3Out<2: 1f>
      else 

#line 406
        mov r12.z, l(0)  // f3Out<2: 0f>

#line 403
      endif 
    endif 

#line 407
    mov r12.xy, r12.xyxx  // SphericalMapping<0:NaN,1:NaN:Inf>
    mov r12.z, r12.z  // SphericalMapping<2:NaN>

#line 737
    mov r12.xyz, r12.xyzx  // f3UVReflection<0:NaN,1:NaN:Inf,2:NaN>
    mov r11.w, r12.z
    mov r11.zw, r11.zzzw  // f3UVRefraction<2:NaN>, f3UVReflection<2:NaN>

#line 729
  endif 

#line 750
  resinfo_indexable(texture2d)(float,float,float,float)_uint r4.xy, l(0), t19.xyzw  // iWidth<0>, iHeight<0>, iLevels<0>
  mov r11.xy, r11.xyxx  // f2UVRefraction<0:NaN:Inf,1:NaN:Inf>
  mov r12.xy, r12.xyxx  // f2UVReflection<0:NaN:Inf,1:NaN:Inf>

#line 755
  lt r2.w, l(0.900000), r11.z

#line 761
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r11.xyxx, t19.xyzw, s0  // f4RefrColor<0:Inf,1:Inf,2:Inf,3:Inf>

#line 755
  if_nz r2.w
    utof r2.w, r4.x
    mul r2.w, r2.w, r11.x
    utof r3.w, r4.y
    mul r3.w, r3.w, r11.y
    ftoi r9.x, r2.w
    ftoi r9.y, r3.w
    mov r9.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r5.xyz, r9.xyzw, t19.xyzw  // f4RefrColor<0:Inf,1:Inf,2:Inf,3:Inf>
  endif 

#line 763
  lt r2.w, l(0.900000), r11.w

#line 770
  sample_indexable(texture2d)(float,float,float,float) r9.xyz, r12.xyxx, t19.xyzw, s0  // f4ReflColor<0:Inf,1:Inf,2:Inf,3:Inf>

#line 763
  if_nz r2.w
    utof r2.w, r4.x
    mul r2.w, r2.w, r12.x
    utof r3.w, r4.y
    mul r3.w, r3.w, r12.y
    ftoi r10.x, r2.w
    ftoi r10.y, r3.w
    mov r10.zw, l(0,0,0,0)
    ld_indexable(texture2d)(float,float,float,float) r9.xyz, r10.xyzw, t19.xyzw  // f4ReflColor<0:Inf,1:Inf,2:Inf,3:Inf>
  endif 

#line 773
  mul r4.xyw, r3.xxxx, r5.xyxz
  mul r3.xyw, r3.yyyy, r9.xyxz
  add r3.xyw, r3.xyxw, r4.xyxw
  mul r4.xyz, r4.zzzz, r7.yzwy
  add r3.xyw, r3.xyxw, r4.xyxz
  mul r4.xyz, r3.zzzz, r8.xyzx
  add r3.xyz, r3.xywx, r4.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 713
else 

#line 777
  add r2.z, r2.z, l(1.000000)
  mul r4.xyz, r2.zzzz, r7.yzwy
  add r3.xyz, r4.xyzx, r8.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 713
endif 

#line 780
ine r2.z, l(0, 0, 0, 0), cb1[9].x
if_nz r2.z
  max r2.z, r8.w, l(0.000000)
  min r2.z, r2.z, l(1.000000)
  mov r2.w, -cb1[5].w
  add r2.w, r2.w, l(1.000000)
  mul r3.w, r2.w, r2.z  // f4ColorOut<3>
else 

#line 783
  mov r3.w, l(1.000000)  // f4ColorOut<3: 1f>

#line 780
endif 

#line 787
ine r2.z, l(0, 0, 0, 0), cb1[13].z
if_nz r2.z
  mov r2.z, cb1[8].x  // fMaterialThickness<0>
  mov r2.w, cb1[8].z  // fRimScalar<0>
  mov r4.x, cb1[8].y  // fStrengthSSSHighlight<0>
  mov r4.y, cb1[7].x  // fExtinctionCoefficientRed<0>
  mov r4.z, cb1[7].y  // fExtinctionCoefficientGreen<0>
  mov r4.w, cb1[7].z  // fExtinctionCoefficientBlue<0>
  mov r7.yzw, r7.yyzw  // f3SpecColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 798
  mov r6.xyz, r6.xyzx  // f4TexColor<0:Inf,1:Inf,2:Inf>
  sample_indexable(texture2d)(float,float,float,float) r5.xyz, r2.xyxx, t21.xyzw, s0
  dp3 r2.x, r5.xyzx, r5.xyzx
  sqrt r2.x, r2.x  // fThickValue<0:NaN:Inf>

#line 806
  mov r2.y, l(0)  // i<0: 0u>
  mov r5.xyzw, l(0,0,0,0)  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN>
  mov r6.w, r2.y  // i<0>
  loop 
    ult r7.x, r6.w, r0.w
    breakc_z r7.x

#line 809
    mov r8.xyz, v7.yzwy
    and r8.xyz, r8.xyzx, icb[r6.w + 0].xxxx
    iadd r8.xyz, r8.xyzx, l(0, 0, 0, 0)
    mov r9.xyz, v13.yzwy
    and r9.xyz, r9.xyzx, icb[r6.w + 0].yyyy
    or r8.xyz, r8.xyzx, r9.xyzx
    mov r9.xyz, v18.yzwy
    and r9.xyz, r9.xyzx, icb[r6.w + 0].zzzz
    or r8.xyz, r8.xyzx, r9.xyzx
    mov r9.xyz, v23.yzwy
    and r9.xyz, r9.xyzx, icb[r6.w + 0].wwww
    or r8.xyz, r8.xyzx, r9.xyzx  // f3LightDir<0:NaN,1:NaN,2:NaN>
    mov r9.xyz, v8.xyzx
    and r9.xyz, r9.xyzx, icb[r6.w + 0].xxxx
    iadd r9.xyz, r9.xyzx, l(0, 0, 0, 0)
    mov r10.xyz, v14.xyzx
    and r10.xyz, r10.xyzx, icb[r6.w + 0].yyyy
    or r9.xyz, r9.xyzx, r10.xyzx
    mov r10.xyz, v19.xyzx
    and r10.xyz, r10.xyzx, icb[r6.w + 0].zzzz
    or r9.xyz, r9.xyzx, r10.xyzx
    mov r10.xyz, v24.xyzx
    and r10.xyz, r10.xyzx, icb[r6.w + 0].wwww
    or r9.xyz, r9.xyzx, r10.xyzx  // f4LightCol<0:NaN,1:NaN,2:NaN>
    nop 
    mov r8.xyz, r8.xyzx  // f3Vec1<0:NaN,1:NaN,2:NaN>
    mov r10.xyz, r1.xyzx  // f3Vec2<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 263
    dp3 r7.x, r8.xyzx, r10.xyzx  // fProduct<0:NaN:Inf>
    mul r7.x, r7.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r11.xyz, r7.xxxx, l(0.500000, 0.500000, 0.500000, 0.000000)  // fProduct<0:NaN:Inf,0:NaN:Inf,0:NaN:Inf>
    mov r11.xyz, r11.xyzx  // HalfLambert<0:NaN:Inf,0:NaN:Inf,0:NaN:Inf>

#line 813
    mov r11.xyz, r11.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r12.xyz, -r1.xyzx
    dp3 r7.x, r12.xyzx, r8.xyzx
    max r7.x, r7.x, l(0.000000)
    mul r12.xyz, r2.zzzz, r7.xxxx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 
    mov r13.xyz, r0.xyzx  // f3Vec1<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 263
    dp3 r7.x, r13.xyzx, r8.xyzx  // fProduct<0:NaN:Inf>
    mul r7.x, r7.x, l(0.500000)  // fProduct<0:NaN:Inf>
    add r7.x, r7.x, l(0.500000)  // fProduct<0:NaN:Inf>
    mov r7.x, r7.x  // HalfLambert<0:NaN:Inf>

#line 816
    mul r7.x, r2.z, r7.x
    add r12.xyz, r7.xxxx, r12.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r13.x, r4.y, r12.x  // f3IndirectLightComponent<0:NaN:Inf>
    mul r13.y, r4.z, r12.y  // f3IndirectLightComponent<1:NaN:Inf>
    mul r13.z, r4.w, r12.z  // f3IndirectLightComponent<2:NaN:Inf>
    mul r12.xyz, r2.xxxx, r13.xyzx  // f3IndirectLightComponent<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    add r13.xyz, r1.wwww, l(1.000000, 1.000000, 1.000000, 0.000000)  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r13.xyz, r13.xyzx, r13.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r7.x, r1.xyzx, r8.xyzx
    max r7.x, r7.x, l(0.000000)
    mul r14.xyz, r7.yzwy, r7.xxxx
    mul r13.xyz, r13.xyzx, r14.xyzx  // f3Rim<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r11.xyz, r6.xyzx, r11.xyzx  // f4DotLN<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 828
    add r11.xyz, r12.xyzx, r11.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mov r5.w, l(1.000000)  // f4FinColor<3: 1f>
    mul r12.xyz, r2.wwww, r13.xyzx
    add r11.xyz, r11.xyzx, r12.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    nop 

#line 271
    add r8.xyz, r8.xyzx, r10.xyzx
    dp3 r7.x, r8.xyzx, r8.xyzx
    rsq r7.x, r7.x
    mul r8.xyz, r7.xxxx, r8.xyzx  // f3HalfAngle<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    dp3 r7.x, r10.xyzx, r8.xyzx
    max r7.x, r7.x, l(0.000000)
    min r7.x, r7.x, l(1.000000)
    mul r7.x, r7.x, l(1.000000)  // BlinnPhongSpec<0:[0f,1f]>

#line 831
    mul r8.xyz, r7.yzwy, r7.xxxx
    mul r8.xyz, r4.xxxx, r8.xyzx
    add r8.xyz, r8.xyzx, r11.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
    mul r5.xyz, r9.xyzx, r8.xyzx  // f4FinColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 806
    iadd r6.w, r6.w, l(1)  // i<0>
  endloop 

#line 834
  mul r3.xyzw, r3.xyzw, r5.xyzw  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN>

#line 787
endif 

#line 842
ine r0.x, l(0, 0, 0, 0), cb2[7].z
if_nz r0.x
  mov r0.xyz, -v6.xyzx
  add r0.xyz, r0.xyzx, v5.xyzx
  dp3 r0.x, r0.xyzx, r0.xyzx
  sqrt r0.x, r0.x
  div r0.x, r0.x, cb2[1].w
  add r3.xyz, r0.xxxx, r3.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
endif 

#line 847
ine r0.x, l(0, 0, 0, 0), cb2[6].x
if_nz r0.x
  dp4 r0.x, r3.xyzw, cb2[2].xyzw  // f4ColorOut<0:NaN:Inf>
  dp4 r0.y, r3.xyzw, cb2[3].xyzw  // f4ColorOut<1:NaN:Inf>
  dp4 r0.z, r3.xyzw, cb2[4].xyzw  // f4ColorOut<2:NaN:Inf>
  dp4 r3.w, r3.xyzw, cb2[5].xyzw  // f4ColorOut<3:NaN:Inf>
  mov r3.xyz, r0.xyzx  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
endif 

#line 852
ine r0.x, l(0, 0, 0, 0), cb2[6].y
if_nz r0.x

#line 860
  mul r0.xyz, r3.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
  add r3.xyz, r0.xyzx, l(0.250000, 0.250000, 0.250000, 0.000000)  // f4ColorOut<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>

#line 852
endif 

#line 866
mov o0.xyz, r3.xyzx  // PS<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
mov o0.w, r3.w  // PS<3:NaN:Inf>
ret 
// Approximately 1618 instruction slots used
